{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This repo was inspired by Your future self will thank you: Building your personal documentation","title":"Home"},{"location":"DiagramsAsCode/","text":"Sequence Diagram # Syntax Documentation sequenceDiagram ClassA->>ClassB: Method1() ClassB-->>ClassA: response1 ClassA->>ClassB: Method2() ClassB-->>ClassA: response2","title":"Sequence Diagram"},{"location":"DiagramsAsCode/#sequence_diagram","text":"Syntax Documentation sequenceDiagram ClassA->>ClassB: Method1() ClassB-->>ClassA: response1 ClassA->>ClassB: Method2() ClassB-->>ClassA: response2","title":"Sequence Diagram"},{"location":"bookmarks/","text":"This is a curated list of resources for professional development News # 2021 # Announcing .NET 6 \u2014 The Fastest .NET Yet Announcing YARP 1.0 Release Announcing dotnet monitor in .NET 6 GitHub Universe 2021 Welcome to C# 10 HTTP/3 support in .NET 6 Announcing ASP.NET Core in .NET 6 Windows Package Manager 1.1 Learn TV Announcement Learning # Microsoft Learn Learn TV How to Contribute to Open Source Interviews # The HackerRank Interview Preparation Kit Google's Interview Prep Guide LeetCode Google's hiring process Mastering the Software Engineering Interview The Tech Interview Questions You Should Be Asking IT Candidates Agile # Agile Essentials Tools # Introducing Microsoft Application Inspector Monorepo # Why Google Stores Billions of Lines of Code in a Single Repository Monorepo to Multirepo and Back Again Optimize your monorepo experience Make your monorepo feel small with Git\u2019s sparse index Get up to speed with partial clone and shallow clone Handbooks # Basecamp Handbook Gitlab Remote Culture Octopus Deploy Handbook Performance # Performance Improvements in .NET 6 Project Management # Free PMI Project Manager Course Remote Work # Trello's Remote Work Blog Security # Secure coding guidelines Developer Productivity # Developer Velocity: How software excellence fuels business performance Developer Velocity Assessment Developer Velocity Lab Maximizing Developer Effectiveness Certifications # Is your certification expiring soon? Renew it for free today! New to Microsoft Certification exams? We have something you need to try Code Reviews # The (written) unwritten guide to pull requests C# Code Reviews Code Quality # Code quality: a concern for businesses, bottom lines, and empathetic programmers Why SOLID principles are still the foundation for modern software architecture Deployment # Single file deployment and executable Documentation and Knowledge Sharing # Email templates to kick-start team engagement Tales from documentation: Write for your clueless users How writing can advance your career as a developer How to write in plain English Documentation, Disrupted: How Two Technical Writers Changed Google Engineering Culture About writing and formatting on GitHub Material for MkDocs Let's Treat Docs Like Code How to Write a Good Documentation Architecture # Clean Architecture Why Write ADRs Management # Feedback # How to Give Effective Feedback Hiring # Introducing the HackerRank Hiring Maturity Model How to Create a Positive Remote Interview Experience The Ultimate Hiring Guide to Developer Skills & Roles Incident Management # Using ChatOps to help Actions on-call engineers 7 Incident Management Best Practices for Long Term Success What the Ideal Incident Lifecycle Should Be Misc # The 2021 State of the Octoverse Practices, research, and tools from Google to improve your people processes Report Metrics The engineering manager's guide to the code review process Onboarding and Environment Setup # Scripting Winget 5 Steps to Creating a Seamless Virtual Onboarding Experience for Your Developers Optimize local dev environments for better onboarding Setting guidelines for repository contributors Grafana's Onboarding Plan One on One Meetings # The Quantified Value Of 1:1 Meetings And How To Make The Most Of Them People Management # Managing Staff-plus engineers Research # Microsoft WorkLab Google Rework Google DevOps research program Learn about Google's manager research What Makes a Great Manager of Software Engineers? Tool: Try Google\u2019s Manager Feedback Survey Great managers still matter: the evolution of Google\u2019s Project Oxygen Time Management # Maker's Schedule, Manager's Schedule Time management for makers Turnover # The Great Resignation is here. What does that mean for developers? Why Are So Many Software Developers Quitting Their Jobs?","title":"Bookmarks"},{"location":"bookmarks/#news","text":"","title":"News"},{"location":"bookmarks/#2021","text":"Announcing .NET 6 \u2014 The Fastest .NET Yet Announcing YARP 1.0 Release Announcing dotnet monitor in .NET 6 GitHub Universe 2021 Welcome to C# 10 HTTP/3 support in .NET 6 Announcing ASP.NET Core in .NET 6 Windows Package Manager 1.1 Learn TV Announcement","title":"2021"},{"location":"bookmarks/#learning","text":"Microsoft Learn Learn TV How to Contribute to Open Source","title":"Learning"},{"location":"bookmarks/#interviews","text":"The HackerRank Interview Preparation Kit Google's Interview Prep Guide LeetCode Google's hiring process Mastering the Software Engineering Interview The Tech Interview Questions You Should Be Asking IT Candidates","title":"Interviews"},{"location":"bookmarks/#agile","text":"Agile Essentials","title":"Agile"},{"location":"bookmarks/#tools","text":"Introducing Microsoft Application Inspector","title":"Tools"},{"location":"bookmarks/#monorepo","text":"Why Google Stores Billions of Lines of Code in a Single Repository Monorepo to Multirepo and Back Again Optimize your monorepo experience Make your monorepo feel small with Git\u2019s sparse index Get up to speed with partial clone and shallow clone","title":"Monorepo"},{"location":"bookmarks/#handbooks","text":"Basecamp Handbook Gitlab Remote Culture Octopus Deploy Handbook","title":"Handbooks"},{"location":"bookmarks/#performance","text":"Performance Improvements in .NET 6","title":"Performance"},{"location":"bookmarks/#project_management","text":"Free PMI Project Manager Course","title":"Project Management"},{"location":"bookmarks/#remote_work","text":"Trello's Remote Work Blog","title":"Remote Work"},{"location":"bookmarks/#security","text":"Secure coding guidelines","title":"Security"},{"location":"bookmarks/#developer_productivity","text":"Developer Velocity: How software excellence fuels business performance Developer Velocity Assessment Developer Velocity Lab Maximizing Developer Effectiveness","title":"Developer Productivity"},{"location":"bookmarks/#certifications","text":"Is your certification expiring soon? Renew it for free today! New to Microsoft Certification exams? We have something you need to try","title":"Certifications"},{"location":"bookmarks/#code_reviews","text":"The (written) unwritten guide to pull requests C# Code Reviews","title":"Code Reviews"},{"location":"bookmarks/#code_quality","text":"Code quality: a concern for businesses, bottom lines, and empathetic programmers Why SOLID principles are still the foundation for modern software architecture","title":"Code Quality"},{"location":"bookmarks/#deployment","text":"Single file deployment and executable","title":"Deployment"},{"location":"bookmarks/#documentation_and_knowledge_sharing","text":"Email templates to kick-start team engagement Tales from documentation: Write for your clueless users How writing can advance your career as a developer How to write in plain English Documentation, Disrupted: How Two Technical Writers Changed Google Engineering Culture About writing and formatting on GitHub Material for MkDocs Let's Treat Docs Like Code How to Write a Good Documentation","title":"Documentation and Knowledge Sharing"},{"location":"bookmarks/#architecture","text":"Clean Architecture Why Write ADRs","title":"Architecture"},{"location":"bookmarks/#management","text":"","title":"Management"},{"location":"bookmarks/#feedback","text":"How to Give Effective Feedback","title":"Feedback"},{"location":"bookmarks/#hiring","text":"Introducing the HackerRank Hiring Maturity Model How to Create a Positive Remote Interview Experience The Ultimate Hiring Guide to Developer Skills & Roles","title":"Hiring"},{"location":"bookmarks/#incident_management","text":"Using ChatOps to help Actions on-call engineers 7 Incident Management Best Practices for Long Term Success What the Ideal Incident Lifecycle Should Be","title":"Incident Management"},{"location":"bookmarks/#misc","text":"The 2021 State of the Octoverse Practices, research, and tools from Google to improve your people processes Report Metrics The engineering manager's guide to the code review process","title":"Misc"},{"location":"bookmarks/#onboarding_and_environment_setup","text":"Scripting Winget 5 Steps to Creating a Seamless Virtual Onboarding Experience for Your Developers Optimize local dev environments for better onboarding Setting guidelines for repository contributors Grafana's Onboarding Plan","title":"Onboarding and Environment Setup"},{"location":"bookmarks/#one_on_one_meetings","text":"The Quantified Value Of 1:1 Meetings And How To Make The Most Of Them","title":"One on One Meetings"},{"location":"bookmarks/#people_management","text":"Managing Staff-plus engineers","title":"People Management"},{"location":"bookmarks/#research","text":"Microsoft WorkLab Google Rework Google DevOps research program Learn about Google's manager research What Makes a Great Manager of Software Engineers? Tool: Try Google\u2019s Manager Feedback Survey Great managers still matter: the evolution of Google\u2019s Project Oxygen","title":"Research"},{"location":"bookmarks/#time_management","text":"Maker's Schedule, Manager's Schedule Time management for makers","title":"Time Management"},{"location":"bookmarks/#turnover","text":"The Great Resignation is here. What does that mean for developers? Why Are So Many Software Developers Quitting Their Jobs?","title":"Turnover"},{"location":"interview/coding-exercise/","text":"Objective # Assess your natural approach to coding and engineering best practices. Pre-Requisites # Test the API Authentication . Run the Code with your favorite IDE. Process # Refactor the code following SOLID principles. Test the code. Make the code production-ready. Code # public class Program { static void Main ( string [] args ) { Task . Run ( async () => { //Get Repositories await GetDetails ( \"https://dev.azure.com/AcmeInc/ff86f2fb-5c3a-49e2-a677-c9b95d6baaef/_apis/tfvc/branches?includeParent=1&includeChildren=1&includeDeleted=1&includeLinks=1&api-version=6.0\" ); //Get Commits await GetDetails ( \"https://dev.azure.com/AcmeInc/ff86f2fb-5c3a-49e2-a677-c9b95d6baaef/_apis/git/repositories/4563efa9-da5d-4f54-b609-18db14479f48/commits?api-version=6.0\" ); //Get Pull Requests await GetDetails ( \"https://dev.azure.com/AcmeInc/ff86f2fb-5c3a-49e2-a677-c9b95d6baaef/_apis/git/repositories/4563efa9-da5d-4f54-b609-18db14479f48/pullrequests?searchCriteria.status=completed||searchCriteria.status=open?api-version=5.1\" ); }). Wait (); } public static async Task GetDetails ( string url ) { try { var personalaccesstoken = \"bGVtb25hY29AYWxsaWFuei1hc3Npc3RhbmNlLmNvbS5hdTpuZXczZ3ludmRpdWJpdno0djNoc2E1enpqMmF3ZGtvbzQ3ZnZxMzZ4aWJxb2x5Y203NnNx\" ; using ( HttpClient client = new HttpClient ()) { client . DefaultRequestHeaders . Accept . Add ( new System . Net . Http . Headers . MediaTypeWithQualityHeaderValue ( \"application/json\" )); client . DefaultRequestHeaders . Authorization = new AuthenticationHeaderValue ( \"Basic\" , personalaccesstoken ); using ( HttpResponseMessage response = await client . GetAsync ( url )) { response . EnsureSuccessStatusCode (); var resultJson = await response . Content . ReadAsStringAsync (); Console . WriteLine ( resultJson ); } } } catch ( Exception ex ) { Console . WriteLine ( ex . ToString ()); } } } API Authentication # Organization: AcmeInc Test Operation : https://dev.azure.com/AcmeInc/_apis/projects?stateFilter=All&api-version=1.0 Authorization Header: Basic bGVtb25hY29AYWxsaWFuei1hc3Npc3RhbmNlLmNvbS5hdTpuZXczZ3ludmRpdWJpdno0djNoc2E1enpqMmF3ZGtvbzQ3ZnZxMzZ4aWJxb2x5Y203NnNx Repository Name: SmartHotel360 Documentation # Azure DevOps Services REST API Reference GitHub REST API Reference","title":"Objective"},{"location":"interview/coding-exercise/#objective","text":"Assess your natural approach to coding and engineering best practices.","title":"Objective"},{"location":"interview/coding-exercise/#pre-requisites","text":"Test the API Authentication . Run the Code with your favorite IDE.","title":"Pre-Requisites"},{"location":"interview/coding-exercise/#process","text":"Refactor the code following SOLID principles. Test the code. Make the code production-ready.","title":"Process"},{"location":"interview/coding-exercise/#code","text":"public class Program { static void Main ( string [] args ) { Task . Run ( async () => { //Get Repositories await GetDetails ( \"https://dev.azure.com/AcmeInc/ff86f2fb-5c3a-49e2-a677-c9b95d6baaef/_apis/tfvc/branches?includeParent=1&includeChildren=1&includeDeleted=1&includeLinks=1&api-version=6.0\" ); //Get Commits await GetDetails ( \"https://dev.azure.com/AcmeInc/ff86f2fb-5c3a-49e2-a677-c9b95d6baaef/_apis/git/repositories/4563efa9-da5d-4f54-b609-18db14479f48/commits?api-version=6.0\" ); //Get Pull Requests await GetDetails ( \"https://dev.azure.com/AcmeInc/ff86f2fb-5c3a-49e2-a677-c9b95d6baaef/_apis/git/repositories/4563efa9-da5d-4f54-b609-18db14479f48/pullrequests?searchCriteria.status=completed||searchCriteria.status=open?api-version=5.1\" ); }). Wait (); } public static async Task GetDetails ( string url ) { try { var personalaccesstoken = \"bGVtb25hY29AYWxsaWFuei1hc3Npc3RhbmNlLmNvbS5hdTpuZXczZ3ludmRpdWJpdno0djNoc2E1enpqMmF3ZGtvbzQ3ZnZxMzZ4aWJxb2x5Y203NnNx\" ; using ( HttpClient client = new HttpClient ()) { client . DefaultRequestHeaders . Accept . Add ( new System . Net . Http . Headers . MediaTypeWithQualityHeaderValue ( \"application/json\" )); client . DefaultRequestHeaders . Authorization = new AuthenticationHeaderValue ( \"Basic\" , personalaccesstoken ); using ( HttpResponseMessage response = await client . GetAsync ( url )) { response . EnsureSuccessStatusCode (); var resultJson = await response . Content . ReadAsStringAsync (); Console . WriteLine ( resultJson ); } } } catch ( Exception ex ) { Console . WriteLine ( ex . ToString ()); } } }","title":"Code"},{"location":"interview/coding-exercise/#api_authentication","text":"Organization: AcmeInc Test Operation : https://dev.azure.com/AcmeInc/_apis/projects?stateFilter=All&api-version=1.0 Authorization Header: Basic bGVtb25hY29AYWxsaWFuei1hc3Npc3RhbmNlLmNvbS5hdTpuZXczZ3ludmRpdWJpdno0djNoc2E1enpqMmF3ZGtvbzQ3ZnZxMzZ4aWJxb2x5Y203NnNx Repository Name: SmartHotel360","title":"API Authentication"},{"location":"interview/coding-exercise/#documentation","text":"Azure DevOps Services REST API Reference GitHub REST API Reference","title":"Documentation"},{"location":"management/1-on-1-guidelines/","text":"1:1 Guidelines # Resources # OKRs and CFRs: How do they work together? GROW Model Guide: Coach managers to coach Topics # Career # Staff Software Engineer Responsibilities Staff Software Engineer Responsibilities \u2013 Align With Authority Staff Engineer: Leadership beyond the management track Engineering Ladders Goals # Objectives Happiness # In the paper \"\ud835\ude16\ud835\ude2f \ud835\ude35\ud835\ude29\ud835\ude26 \ud835\ude1c\ud835\ude2f\ud835\ude29\ud835\ude22\ud835\ude31\ud835\ude31\ud835\ude2a\ud835\ude2f\ud835\ude26\ud835\ude34\ud835\ude34 \ud835\ude30\ud835\ude27 \ud835\ude1a\ud835\ude30\ud835\ude27\ud835\ude35\ud835\ude38\ud835\ude22\ud835\ude33\ud835\ude26 \ud835\ude0b\ud835\ude26\ud835\ude37\ud835\ude26\ud835\ude2d\ud835\ude30\ud835\ude31\ud835\ude26\ud835\ude33\ud835\ude34\" more than 2000 developers were asked to say what makes them unhappy. These are the most common causes: \ud835\uddd5\ud835\uddf2\ud835\uddf6\ud835\uddfb\ud835\uddf4 \ud835\ude00\ud835\ude01\ud835\ude02\ud835\uddf0\ud835\uddf8 \ud835\uddf6\ud835\uddfb \ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddef\ud835\uddf9\ud835\uddf2\ud835\uddfa-\ud835\ude00\ud835\uddfc\ud835\uddf9\ud835\ude03\ud835\uddf6\ud835\uddfb\ud835\uddf4 - \ud835\udfed\ud835\udff4\ud835\udff2 \ud835\udde7\ud835\uddf6\ud835\uddfa\ud835\uddf2 \ud835\uddfd\ud835\uddff\ud835\uddf2\ud835\ude00\ud835\ude00\ud835\ude02\ud835\uddff\ud835\uddf2 - \ud835\udfed\ud835\udff1\ud835\udfee \ud835\uddd5\ud835\uddee\ud835\uddf1 \ud835\uddf0\ud835\uddfc\ud835\uddf1\ud835\uddf2 \ud835\uddfe\ud835\ude02\ud835\uddee\ud835\uddf9\ud835\uddf6\ud835\ude01\ud835\ude06 \ud835\uddee\ud835\uddfb\ud835\uddf1 \ud835\uddf0\ud835\uddfc\ud835\uddf1\ud835\uddf2 \ud835\uddfd\ud835\uddff\ud835\uddee\ud835\uddf0\ud835\ude01\ud835\uddf6\ud835\uddf0\ud835\uddf2 - \ud835\udfed\ud835\udfec\ud835\udff3 \ud835\udde8\ud835\uddfb\ud835\uddf1\ud835\uddf2\ud835\uddff-\ud835\uddfd\ud835\uddf2\ud835\uddff\ud835\uddf3\ud835\uddfc\ud835\uddff\ud835\uddfa\ud835\uddf6\ud835\uddfb\ud835\uddf4 \ud835\uddf0\ud835\uddfc\ud835\uddf9\ud835\uddf9\ud835\uddf2\ud835\uddee\ud835\uddf4\ud835\ude02\ud835\uddf2 - \ud835\udff3\ud835\udfed \ud835\uddd9\ud835\uddf2\ud835\uddf2\ud835\uddf9 \ud835\uddf6\ud835\uddfb\ud835\uddee\ud835\uddf1\ud835\uddf2\ud835\uddfe\ud835\ude02\ud835\uddee\ud835\ude01\ud835\uddf2 \ud835\ude04\ud835\uddf6\ud835\ude01\ud835\uddf5 \ud835\ude04\ud835\uddfc\ud835\uddff\ud835\uddf8 - \ud835\udff2\ud835\udfef \ud835\udde0\ud835\ude02\ud835\uddfb\ud835\uddf1\ud835\uddee\ud835\uddfb\ud835\uddf2 \ud835\uddfc\ud835\uddff \ud835\uddff\ud835\uddf2\ud835\uddfd\ud835\uddf2\ud835\ude01\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\ude03\ud835\uddf2 \ud835\ude01\ud835\uddee\ud835\ude00\ud835\uddf8\ud835\ude00 - \ud835\udff2\ud835\udfec \ud835\udde8\ud835\uddfb\ud835\uddf2\ud835\ude05\ud835\uddfd\ud835\uddf9\ud835\uddee\ud835\uddf6\ud835\uddfb\ud835\uddf2\ud835\uddf1 \ud835\uddef\ud835\uddff\ud835\uddfc\ud835\uddf8\ud835\uddf2\ud835\uddfb \ud835\uddf0\ud835\uddfc\ud835\uddf1\ud835\uddf2 - \ud835\udff1\ud835\udff3 \ud835\uddd5\ud835\uddee\ud835\uddf1 \ud835\uddf1\ud835\uddf2\ud835\uddf0\ud835\uddf6\ud835\ude00\ud835\uddf6\ud835\uddfc\ud835\uddfb-\ud835\uddfa\ud835\uddee\ud835\uddf8\ud835\uddf6\ud835\uddfb\ud835\uddf4 - \ud835\udff0\ud835\udfee \ud835\udddc\ud835\uddfa\ud835\uddfd\ud835\uddfc\ud835\ude00\ud835\uddf2\ud835\uddf1 \ud835\uddf9\ud835\uddf6\ud835\uddfa\ud835\uddf6\ud835\ude01\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb \ud835\uddfc\ud835\uddfb \ud835\uddf1\ud835\uddf2\ud835\ude03\ud835\uddf2\ud835\uddf9\ud835\uddfc\ud835\uddfd\ud835\uddfa\ud835\uddf2\ud835\uddfb\ud835\ude01 - \ud835\udff0\ud835\udfec \ud835\udde3\ud835\uddf2\ud835\uddff\ud835\ude00\ud835\uddfc\ud835\uddfb\ud835\uddee\ud835\uddf9 \ud835\uddf6\ud835\ude00\ud835\ude00\ud835\ude02\ud835\uddf2\ud835\ude00 - \ud835\uddfb\ud835\uddfc\ud835\ude01 \ud835\ude04\ud835\uddfc\ud835\uddff\ud835\uddf8-\ud835\uddff\ud835\uddf2\ud835\uddf9\ud835\uddee\ud835\ude01\ud835\uddf2\ud835\uddf1 - \ud835\udfef\ud835\udff5","title":"1:1 Guidelines"},{"location":"management/1-on-1-guidelines/#11_guidelines","text":"","title":"1:1 Guidelines"},{"location":"management/1-on-1-guidelines/#resources","text":"OKRs and CFRs: How do they work together? GROW Model Guide: Coach managers to coach","title":"Resources"},{"location":"management/1-on-1-guidelines/#topics","text":"","title":"Topics"},{"location":"management/1-on-1-guidelines/#career","text":"Staff Software Engineer Responsibilities Staff Software Engineer Responsibilities \u2013 Align With Authority Staff Engineer: Leadership beyond the management track Engineering Ladders","title":"Career"},{"location":"management/1-on-1-guidelines/#goals","text":"Objectives","title":"Goals"},{"location":"management/1-on-1-guidelines/#happiness","text":"In the paper \"\ud835\ude16\ud835\ude2f \ud835\ude35\ud835\ude29\ud835\ude26 \ud835\ude1c\ud835\ude2f\ud835\ude29\ud835\ude22\ud835\ude31\ud835\ude31\ud835\ude2a\ud835\ude2f\ud835\ude26\ud835\ude34\ud835\ude34 \ud835\ude30\ud835\ude27 \ud835\ude1a\ud835\ude30\ud835\ude27\ud835\ude35\ud835\ude38\ud835\ude22\ud835\ude33\ud835\ude26 \ud835\ude0b\ud835\ude26\ud835\ude37\ud835\ude26\ud835\ude2d\ud835\ude30\ud835\ude31\ud835\ude26\ud835\ude33\ud835\ude34\" more than 2000 developers were asked to say what makes them unhappy. These are the most common causes: \ud835\uddd5\ud835\uddf2\ud835\uddf6\ud835\uddfb\ud835\uddf4 \ud835\ude00\ud835\ude01\ud835\ude02\ud835\uddf0\ud835\uddf8 \ud835\uddf6\ud835\uddfb \ud835\uddfd\ud835\uddff\ud835\uddfc\ud835\uddef\ud835\uddf9\ud835\uddf2\ud835\uddfa-\ud835\ude00\ud835\uddfc\ud835\uddf9\ud835\ude03\ud835\uddf6\ud835\uddfb\ud835\uddf4 - \ud835\udfed\ud835\udff4\ud835\udff2 \ud835\udde7\ud835\uddf6\ud835\uddfa\ud835\uddf2 \ud835\uddfd\ud835\uddff\ud835\uddf2\ud835\ude00\ud835\ude00\ud835\ude02\ud835\uddff\ud835\uddf2 - \ud835\udfed\ud835\udff1\ud835\udfee \ud835\uddd5\ud835\uddee\ud835\uddf1 \ud835\uddf0\ud835\uddfc\ud835\uddf1\ud835\uddf2 \ud835\uddfe\ud835\ude02\ud835\uddee\ud835\uddf9\ud835\uddf6\ud835\ude01\ud835\ude06 \ud835\uddee\ud835\uddfb\ud835\uddf1 \ud835\uddf0\ud835\uddfc\ud835\uddf1\ud835\uddf2 \ud835\uddfd\ud835\uddff\ud835\uddee\ud835\uddf0\ud835\ude01\ud835\uddf6\ud835\uddf0\ud835\uddf2 - \ud835\udfed\ud835\udfec\ud835\udff3 \ud835\udde8\ud835\uddfb\ud835\uddf1\ud835\uddf2\ud835\uddff-\ud835\uddfd\ud835\uddf2\ud835\uddff\ud835\uddf3\ud835\uddfc\ud835\uddff\ud835\uddfa\ud835\uddf6\ud835\uddfb\ud835\uddf4 \ud835\uddf0\ud835\uddfc\ud835\uddf9\ud835\uddf9\ud835\uddf2\ud835\uddee\ud835\uddf4\ud835\ude02\ud835\uddf2 - \ud835\udff3\ud835\udfed \ud835\uddd9\ud835\uddf2\ud835\uddf2\ud835\uddf9 \ud835\uddf6\ud835\uddfb\ud835\uddee\ud835\uddf1\ud835\uddf2\ud835\uddfe\ud835\ude02\ud835\uddee\ud835\ude01\ud835\uddf2 \ud835\ude04\ud835\uddf6\ud835\ude01\ud835\uddf5 \ud835\ude04\ud835\uddfc\ud835\uddff\ud835\uddf8 - \ud835\udff2\ud835\udfef \ud835\udde0\ud835\ude02\ud835\uddfb\ud835\uddf1\ud835\uddee\ud835\uddfb\ud835\uddf2 \ud835\uddfc\ud835\uddff \ud835\uddff\ud835\uddf2\ud835\uddfd\ud835\uddf2\ud835\ude01\ud835\uddf6\ud835\ude01\ud835\uddf6\ud835\ude03\ud835\uddf2 \ud835\ude01\ud835\uddee\ud835\ude00\ud835\uddf8\ud835\ude00 - \ud835\udff2\ud835\udfec \ud835\udde8\ud835\uddfb\ud835\uddf2\ud835\ude05\ud835\uddfd\ud835\uddf9\ud835\uddee\ud835\uddf6\ud835\uddfb\ud835\uddf2\ud835\uddf1 \ud835\uddef\ud835\uddff\ud835\uddfc\ud835\uddf8\ud835\uddf2\ud835\uddfb \ud835\uddf0\ud835\uddfc\ud835\uddf1\ud835\uddf2 - \ud835\udff1\ud835\udff3 \ud835\uddd5\ud835\uddee\ud835\uddf1 \ud835\uddf1\ud835\uddf2\ud835\uddf0\ud835\uddf6\ud835\ude00\ud835\uddf6\ud835\uddfc\ud835\uddfb-\ud835\uddfa\ud835\uddee\ud835\uddf8\ud835\uddf6\ud835\uddfb\ud835\uddf4 - \ud835\udff0\ud835\udfee \ud835\udddc\ud835\uddfa\ud835\uddfd\ud835\uddfc\ud835\ude00\ud835\uddf2\ud835\uddf1 \ud835\uddf9\ud835\uddf6\ud835\uddfa\ud835\uddf6\ud835\ude01\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb \ud835\uddfc\ud835\uddfb \ud835\uddf1\ud835\uddf2\ud835\ude03\ud835\uddf2\ud835\uddf9\ud835\uddfc\ud835\uddfd\ud835\uddfa\ud835\uddf2\ud835\uddfb\ud835\ude01 - \ud835\udff0\ud835\udfec \ud835\udde3\ud835\uddf2\ud835\uddff\ud835\ude00\ud835\uddfc\ud835\uddfb\ud835\uddee\ud835\uddf9 \ud835\uddf6\ud835\ude00\ud835\ude00\ud835\ude02\ud835\uddf2\ud835\ude00 - \ud835\uddfb\ud835\uddfc\ud835\ude01 \ud835\ude04\ud835\uddfc\ud835\uddff\ud835\uddf8-\ud835\uddff\ud835\uddf2\ud835\uddf9\ud835\uddee\ud835\ude01\ud835\uddf2\ud835\uddf1 - \ud835\udfef\ud835\udff5","title":"Happiness"},{"location":"management/OKRs/","text":"OKRs # Definition # OKR stands for Objectives and Key Results. OKRs help break up big, audacious missions into actionable goals and milestones. * Objectives (The \u201cWhat\u201d): An objective is what you want to do. It describes our mission-supporting goal. * Key Results (The \u201cHow\u201d): Objectives must be paired with a roadmap that will help you know whether or not you\u2019re on the path to meeting your goals. Resources # The Roofshot Manifesto Get Started With OKRs Set goals with OKRs How to write SMART goals Objectives # Professional Development # This a list of ideas to make learning a part the routine. https://github.com/jorgef/engineeringladders https://github.com/stars/leandromonaco/lists/roadmaps Develop a growth mindset Enhance your self-efficacy Exercise your emotional intelligence Grow your cognitive flexibility Leverage self-regulation to work strategically Attend conferences Maintain a catalog of reference-able notes by documenting your learnings on an ongoing basis Apply the knowledge to something you care about Join a course club Complete online training sessions Obtain a certification or renew it Participate in forums and communities Read documentation , e-books , blogs or other online resources Contribute to open source Participate in a hackathon Practice with code katas Participate in communities of practice Conferences # GitHub Universe .NET Conf Redis Conf Microsoft Ignite Microsoft Build Culture # Cultivate a culture that fosters psychological safety Goal-Oriented Ideas # Cultivate a culture of belongingness and continous learning Build a strong culture of documentation and knowledge sharing Give and receive effective feedback Communicate strategically through mirroring and coaching and practice active listening Ask better questions in team's discussions Participate effectively in Scrum Events Address common team challenges Reference Material # Westrum organizational culture Remote culture Understanding team effectiveness DevOps cultural capabilities Tools and Processes # Goal-Oriented Ideas # TBA Reference Material # The outcomes of code review, and how to improve the process Code Review Best Practices Coordinating Pull Requests Plan-Do-Check-Act Value Stream Mapping Why SOLID principles are still the foundation for modern software architecture The twelve-factor app Automate the boring parts of your job Delivery # Deliver consistent positive outcomes to our customers Goal-Oriented Ideas # Scale through automation Reuse code without the friction Maximize Developer Effectiveness Optimize local development environments Create efficiencies that support the business Improve DevOps Capabilities Reference Material # TBA Quality # Improve code quality to reduce technical debt Write quality code that does what it\u2019s intended to do, follows a consistent style, is easy to understand, is well documented, and can be tested. Focus on readability, performance, maintainability, reliability/resiliency, and security. Goal-Oriented Ideas # Remove legacy code that is no longer in use. Take time to separate the code and use the object oriented design approach you\u2019ve heard so much about. Allow time for refactoring, clean the code up when you have the opportunity. Don\u2019t forget to run your tests again! If your team doesn\u2019t have a coding standard work to put one in place, don\u2019t assume others will look at code for examples. Once the standards are in place paired programming and code reviews can ensure proper technique and also help develop the programmer\u2019s skill set. Automation Testing Unit Testing Integration Testing Load Testing Static Application Security Testing (SAST) Dynamic Application Security Testing (DAST) Code Smells Production Support Post-mortem reviews Incident Management On-Call Logging Monitoring (SRE and Observability) Reference Material # Testing in .NET . Playwright for .NET . Five Ways to Improve Your Code Quality . Future frontiers: Why developers need to go beyond the OWASP Top 10 for secure coding mastery On Technical Debt And Code Smells: Surprising insights from scientific studies Plan for tradeoffs: You can\u2019t optimize all software quality attributes Is High Quality Software Worth the Cost? The 12-Factor App Why SOLID principles are still the foundation for modern software architecture Knowledge # Share and document the knowledge Create documentation to reduce interruptions and increase developer flow state . Goal-Oriented Ideas # Speed up the time it takes to onboard new team members Set guidelines for repository contributors and pull request reviews Improve your technical writing skills and leverage on writing to advance your career Document to save time and share context Follow the style guide Adopt Documentation as Code by creating Markdown files and generating a branded static site hosted on GitHub Pages Document infrastructure, architecture , and Technical Analysis and Design Write guides, tutorials, runbooks, and anything that will make the team successful Reduce the amount of time your team spends searching for answers to technical problems Create documentation when there is information on the subject Update documentation when there is partial or outdated information on the subject Consolidate documentation when there are multiple conflicting pieces of information on the same subject Create swagger documentation , tech radars or identify coding features of software components Reference Material # Articles and resources on knowledge reuse","title":"OKRs"},{"location":"management/OKRs/#okrs","text":"","title":"OKRs"},{"location":"management/OKRs/#definition","text":"OKR stands for Objectives and Key Results. OKRs help break up big, audacious missions into actionable goals and milestones. * Objectives (The \u201cWhat\u201d): An objective is what you want to do. It describes our mission-supporting goal. * Key Results (The \u201cHow\u201d): Objectives must be paired with a roadmap that will help you know whether or not you\u2019re on the path to meeting your goals.","title":"Definition"},{"location":"management/OKRs/#resources","text":"The Roofshot Manifesto Get Started With OKRs Set goals with OKRs How to write SMART goals","title":"Resources"},{"location":"management/OKRs/#objectives","text":"","title":"Objectives"},{"location":"management/OKRs/#professional_development","text":"This a list of ideas to make learning a part the routine. https://github.com/jorgef/engineeringladders https://github.com/stars/leandromonaco/lists/roadmaps Develop a growth mindset Enhance your self-efficacy Exercise your emotional intelligence Grow your cognitive flexibility Leverage self-regulation to work strategically Attend conferences Maintain a catalog of reference-able notes by documenting your learnings on an ongoing basis Apply the knowledge to something you care about Join a course club Complete online training sessions Obtain a certification or renew it Participate in forums and communities Read documentation , e-books , blogs or other online resources Contribute to open source Participate in a hackathon Practice with code katas Participate in communities of practice","title":"Professional Development"},{"location":"management/OKRs/#conferences","text":"GitHub Universe .NET Conf Redis Conf Microsoft Ignite Microsoft Build","title":"Conferences"},{"location":"management/OKRs/#culture","text":"Cultivate a culture that fosters psychological safety","title":"Culture"},{"location":"management/OKRs/#goal-oriented_ideas","text":"Cultivate a culture of belongingness and continous learning Build a strong culture of documentation and knowledge sharing Give and receive effective feedback Communicate strategically through mirroring and coaching and practice active listening Ask better questions in team's discussions Participate effectively in Scrum Events Address common team challenges","title":"Goal-Oriented Ideas"},{"location":"management/OKRs/#reference_material","text":"Westrum organizational culture Remote culture Understanding team effectiveness DevOps cultural capabilities","title":"Reference Material"},{"location":"management/OKRs/#tools_and_processes","text":"","title":"Tools and Processes"},{"location":"management/OKRs/#goal-oriented_ideas_1","text":"TBA","title":"Goal-Oriented Ideas"},{"location":"management/OKRs/#reference_material_1","text":"The outcomes of code review, and how to improve the process Code Review Best Practices Coordinating Pull Requests Plan-Do-Check-Act Value Stream Mapping Why SOLID principles are still the foundation for modern software architecture The twelve-factor app Automate the boring parts of your job","title":"Reference Material"},{"location":"management/OKRs/#delivery","text":"Deliver consistent positive outcomes to our customers","title":"Delivery"},{"location":"management/OKRs/#goal-oriented_ideas_2","text":"Scale through automation Reuse code without the friction Maximize Developer Effectiveness Optimize local development environments Create efficiencies that support the business Improve DevOps Capabilities","title":"Goal-Oriented Ideas"},{"location":"management/OKRs/#reference_material_2","text":"TBA","title":"Reference Material"},{"location":"management/OKRs/#quality","text":"Improve code quality to reduce technical debt Write quality code that does what it\u2019s intended to do, follows a consistent style, is easy to understand, is well documented, and can be tested. Focus on readability, performance, maintainability, reliability/resiliency, and security.","title":"Quality"},{"location":"management/OKRs/#goal-oriented_ideas_3","text":"Remove legacy code that is no longer in use. Take time to separate the code and use the object oriented design approach you\u2019ve heard so much about. Allow time for refactoring, clean the code up when you have the opportunity. Don\u2019t forget to run your tests again! If your team doesn\u2019t have a coding standard work to put one in place, don\u2019t assume others will look at code for examples. Once the standards are in place paired programming and code reviews can ensure proper technique and also help develop the programmer\u2019s skill set. Automation Testing Unit Testing Integration Testing Load Testing Static Application Security Testing (SAST) Dynamic Application Security Testing (DAST) Code Smells Production Support Post-mortem reviews Incident Management On-Call Logging Monitoring (SRE and Observability)","title":"Goal-Oriented Ideas"},{"location":"management/OKRs/#reference_material_3","text":"Testing in .NET . Playwright for .NET . Five Ways to Improve Your Code Quality . Future frontiers: Why developers need to go beyond the OWASP Top 10 for secure coding mastery On Technical Debt And Code Smells: Surprising insights from scientific studies Plan for tradeoffs: You can\u2019t optimize all software quality attributes Is High Quality Software Worth the Cost? The 12-Factor App Why SOLID principles are still the foundation for modern software architecture","title":"Reference Material"},{"location":"management/OKRs/#knowledge","text":"Share and document the knowledge Create documentation to reduce interruptions and increase developer flow state .","title":"Knowledge"},{"location":"management/OKRs/#goal-oriented_ideas_4","text":"Speed up the time it takes to onboard new team members Set guidelines for repository contributors and pull request reviews Improve your technical writing skills and leverage on writing to advance your career Document to save time and share context Follow the style guide Adopt Documentation as Code by creating Markdown files and generating a branded static site hosted on GitHub Pages Document infrastructure, architecture , and Technical Analysis and Design Write guides, tutorials, runbooks, and anything that will make the team successful Reduce the amount of time your team spends searching for answers to technical problems Create documentation when there is information on the subject Update documentation when there is partial or outdated information on the subject Consolidate documentation when there are multiple conflicting pieces of information on the same subject Create swagger documentation , tech radars or identify coding features of software components","title":"Goal-Oriented Ideas"},{"location":"management/OKRs/#reference_material_4","text":"Articles and resources on knowledge reuse","title":"Reference Material"},{"location":"management/development-guidelines/","text":"Development Strategy # Table of contents # Introduction General Guidelines Conventions Best Practices Tools and Frameworks Introduction # This document is a set of upfront decisions that allows the team to come up with an effective set of dos, don\u2019ts and hows regarding the future application design, development and deployment, and move consistently through each step of a development project. General # Use GitHub folder structure (src, doc, test, build, tool) Use sqlproj project file for SQL databases Use the latest .NET LTS version. See .NET Roadmap Guidelines # Area Guideline Change Management - GitHub Flow - Semantic Versioning - Code Review Guidelines - Changelog Guidelines Security - OWASP Top 10 - 2021 - .NET Security Cheat Sheet Architecture - Clean Architecture - The Twelve-Factor App Process - Scrum Guide - Kanban Guide for Scrum Teams Documentation - Technical Writing Style Guide Conventions # C# Coding Conventions Azure Resources Naming Conventions Best Practices # Asynchronous Programming ASP.NET Core Unit testing best practices Clean Architecture / SOLID / KISS / YAGNI / DRY C# static code analysis TypeScript TypeScript static code analysis T-SQL static code analysis Tools and Frameworks # Area Packages Testing - Specflow - xUnit - nSubstitute - Fluent Assertions - Fluent Validations - AutoFixture - BenchmarkDotNet - Coverlet - NBomber - Playwright Logging - Serilog - SEQ Architecture - Clean Architecture Solution Template Worker Service - Quartz.NET - Hangfire API - Fluent API - Asp.Versioning.Http - Microsoft.Extensions.Diagnostics.HealthChecks - Guard Clauses Build - Nuke - Nerdbank.GitVersioning SMTP Testing - Papercut Tools - CommandLineParser Code Quality # https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ https://rules.sonarsource.com/csharp (https://www.nuget.org/packages/SonarAnalyzer.CSharp/) https://docs.devexpress.com/CodeRushForRoslyn/116021/static-code-analysis/analyzers-library <PropertyGroup> <TreatWarningsAsErrors> true </TreatWarningsAsErrors> <CodeAnalysisTreatWarningsAsErrors> true </CodeAnalysisTreatWarningsAsErrors> </PropertyGroup> Reference Material # https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/health-checks?view=aspnetcore-6.0 https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/monitor-app-health","title":"Development Guidelines"},{"location":"management/development-guidelines/#development_strategy","text":"","title":"Development Strategy"},{"location":"management/development-guidelines/#table_of_contents","text":"Introduction General Guidelines Conventions Best Practices Tools and Frameworks","title":"Table of contents"},{"location":"management/development-guidelines/#introduction","text":"This document is a set of upfront decisions that allows the team to come up with an effective set of dos, don\u2019ts and hows regarding the future application design, development and deployment, and move consistently through each step of a development project.","title":"Introduction"},{"location":"management/development-guidelines/#general","text":"Use GitHub folder structure (src, doc, test, build, tool) Use sqlproj project file for SQL databases Use the latest .NET LTS version. See .NET Roadmap","title":"General"},{"location":"management/development-guidelines/#guidelines","text":"Area Guideline Change Management - GitHub Flow - Semantic Versioning - Code Review Guidelines - Changelog Guidelines Security - OWASP Top 10 - 2021 - .NET Security Cheat Sheet Architecture - Clean Architecture - The Twelve-Factor App Process - Scrum Guide - Kanban Guide for Scrum Teams Documentation - Technical Writing Style Guide","title":"Guidelines"},{"location":"management/development-guidelines/#conventions","text":"C# Coding Conventions Azure Resources Naming Conventions","title":"Conventions"},{"location":"management/development-guidelines/#best_practices","text":"Asynchronous Programming ASP.NET Core Unit testing best practices Clean Architecture / SOLID / KISS / YAGNI / DRY C# static code analysis TypeScript TypeScript static code analysis T-SQL static code analysis","title":"Best Practices"},{"location":"management/development-guidelines/#tools_and_frameworks","text":"Area Packages Testing - Specflow - xUnit - nSubstitute - Fluent Assertions - Fluent Validations - AutoFixture - BenchmarkDotNet - Coverlet - NBomber - Playwright Logging - Serilog - SEQ Architecture - Clean Architecture Solution Template Worker Service - Quartz.NET - Hangfire API - Fluent API - Asp.Versioning.Http - Microsoft.Extensions.Diagnostics.HealthChecks - Guard Clauses Build - Nuke - Nerdbank.GitVersioning SMTP Testing - Papercut Tools - CommandLineParser","title":"Tools and Frameworks"},{"location":"management/development-guidelines/#code_quality","text":"https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ https://rules.sonarsource.com/csharp (https://www.nuget.org/packages/SonarAnalyzer.CSharp/) https://docs.devexpress.com/CodeRushForRoslyn/116021/static-code-analysis/analyzers-library <PropertyGroup> <TreatWarningsAsErrors> true </TreatWarningsAsErrors> <CodeAnalysisTreatWarningsAsErrors> true </CodeAnalysisTreatWarningsAsErrors> </PropertyGroup>","title":"Code Quality"},{"location":"management/development-guidelines/#reference_material","text":"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/health-checks?view=aspnetcore-6.0 https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/monitor-app-health","title":"Reference Material"},{"location":"management/ways-of-working/","text":"Ways of Working ideas Project Planning # Scrum Framework Atlassian's Agile Coach Capacity Planning # Definition of Ready (DOR) # Independent (of all others). Negotiable (not a specific contract for features). Valuable (or vertical). Estimable (to a good approximation). Small (so as to fit within an iteration). Testable (in principle, even if there isn\u2019t a test for it yet). Definition of Done (DOD) # The Definition of Done creates transparency by providing everyone a shared understanding of what work was completed. Unit tests are passing. Automation tests are passing. Documentation is updated. The change is code reviewed via a pull request. Code is merged into the main branch. Testing is done by Testers. Managing Risks, Assumptions, Impediments, and Dependencies # https://www.techagilist.com/agile/scrum/raid/ Strategy # Objectives Development Strategy","title":"Ways of Working"},{"location":"management/ways-of-working/#project_planning","text":"Scrum Framework Atlassian's Agile Coach","title":"Project Planning"},{"location":"management/ways-of-working/#capacity_planning","text":"","title":"Capacity Planning"},{"location":"management/ways-of-working/#definition_of_ready_dor","text":"Independent (of all others). Negotiable (not a specific contract for features). Valuable (or vertical). Estimable (to a good approximation). Small (so as to fit within an iteration). Testable (in principle, even if there isn\u2019t a test for it yet).","title":"Definition of Ready (DOR)"},{"location":"management/ways-of-working/#definition_of_done_dod","text":"The Definition of Done creates transparency by providing everyone a shared understanding of what work was completed. Unit tests are passing. Automation tests are passing. Documentation is updated. The change is code reviewed via a pull request. Code is merged into the main branch. Testing is done by Testers.","title":"Definition of Done (DOD)"},{"location":"management/ways-of-working/#managing_risks_assumptions_impediments_and_dependencies","text":"https://www.techagilist.com/agile/scrum/raid/","title":"Managing Risks, Assumptions, Impediments, and Dependencies"},{"location":"management/ways-of-working/#strategy","text":"Objectives Development Strategy","title":"Strategy"},{"location":"support/support/","text":"Quick Assist # Give the security code to the person you\u2019re helping and tell them to follow these steps: Open the Start menu go to Windows Accessories -> Quick Assist or type Quick Assist in the search bar and select the Quick Assist app to launch it. Accept the privacy policy, if prompted. Enter the code provided in Code from assistant and click Share screen. Verify that the person trying to help you is who you expected and accept the request. Wait for your devices to connect. Problem Step Recorder (PSR) # Click on your Windows Start search menu Type \u201cPSR\u201d and then click on psr.exe in the search results. Open the application Start the recording from the login page until you reach the page where you can see the error message/problem occured. Once you reach the last page, ensure your home page before you stop the recording to ensure that you have captured the last page where we encountered the error message. In the Save As dialog box, type a name for the file, and then click Save. Then it will be created as a zip file. Please send the zip file attached to this email You may look online for more suitable steps for your computer if the above steps will not work. Please let me know if you need any further assistance, I would be happy to help and assist further.","title":"Quick Assist"},{"location":"support/support/#quick_assist","text":"Give the security code to the person you\u2019re helping and tell them to follow these steps: Open the Start menu go to Windows Accessories -> Quick Assist or type Quick Assist in the search bar and select the Quick Assist app to launch it. Accept the privacy policy, if prompted. Enter the code provided in Code from assistant and click Share screen. Verify that the person trying to help you is who you expected and accept the request. Wait for your devices to connect.","title":"Quick Assist"},{"location":"support/support/#problem_step_recorder_psr","text":"Click on your Windows Start search menu Type \u201cPSR\u201d and then click on psr.exe in the search results. Open the application Start the recording from the login page until you reach the page where you can see the error message/problem occured. Once you reach the last page, ensure your home page before you stop the recording to ensure that you have captured the last page where we encountered the error message. In the Save As dialog box, type a name for the file, and then click Save. Then it will be created as a zip file. Please send the zip file attached to this email You may look online for more suitable steps for your computer if the above steps will not work. Please let me know if you need any further assistance, I would be happy to help and assist further.","title":"Problem Step Recorder (PSR)"},{"location":"technology/AWS/","text":"Training # AWS Workshops AWS Skill Builder Ramp-Up Guides Well-Architected Labs Training and Certification AWS Serverless SaaS Workshop Credentials # C:\\Users{USER}.aws\\credentials Certification # AWS Certified Cloud Practitioner | Training & Ramp-Up Guide AWS Certified Developer - Associate | Ramp-Up Guide AWS Certified DevOps Engineer - Professional | Ramp-Up Guide AWS Certified Solutions Architect \u2013 Associate & Professional | Ramp-Up Guide AWS CDK # AWS Cloud Development Kit Getting started with the AWS CDK https://docs.aws.amazon.com/cdk/v2/guide/troubleshooting.html#troubleshooting_toolkit npm install -g aws-cdk or npm upgrade -g aws-cdk cdk --version Useful Commands # dotnet build src compile this app cdk deploy deploy this stack to your default AWS account/region cdk diff compare deployed stack with current state cdk synth emits the synthesized CloudFormation template SAM # What is the AWS Serverless Application Model (AWS SAM)? AWS Serverless Application Model winget install -e --id Amazon.SAM-CLI or winget upgrade -e --id Amazon.SAM-CLI sam --version Templates: Run sam init New-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem\" -Name \"LongPathsEnabled\" -Value 1 -PropertyType DWORD -Force AWS CLI # Install aws-cli winget install -e --id Amazon.AWSCLI Useful Commands # aws --endpoint-url=http://localhost:4566 dynamodb create-table --table-name ServiceName_Setting --attribute-definitions AttributeName=TenantId,AttributeType=S --key-schema AttributeName=TenantId,KeyType=HASH --billing-mode PAY_PER_REQUEST aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name sample-queue2 aws --endpoint-url=http://localhost:4566 kms --region ap-southeast-2 create-key --tags TagKey=Purpose,TagValue=Test --description \"Development test key\" aws --endpoint-url=http://localhost:4566 kms encrypt --region ap-southeast-2 --key-id 1cc95196-acb1-4279-9063-a3daa3d9a20d --plaintext fileb://C:\\TEMP\\connectionstring.txt LocalStack # Installation # Run winget install -e --id Python.Python.3 Install pip py -m ensurepip --upgrade Install Docker winget install -e --id Docker.DockerDesktop Go to -> \"start\" and type \"Manage App Execution Aliases\". Go to it and turn off \"Python\" Install LocalStack Cockpit Install localstack-cli pip install localstack and check version `localstack --version Install awslocal pip install awscli-local and check version awslocal --version Install cdklocal npm install -g aws-cdk-local aws-cdk and check version cdklocal --version Browse http://localhost:4566/ and http://localhost:4566/health to test the setup Reference # AWS Service Feature Coverage Configuration Environment Variables # AWS_DEFAULT_REGION=ap-southeast-2 SERVICES=s3,sns,kms,sqs,lambda,dynamodb,iam,serverless,ecr,sts,ssm DYNAMODB_SHARE_DB=1 PERSIST_ALL=1 USE_SINGLE_REGION=true LAMBDA_EXECUTOR=docker LAMBDA_REMOTE_DOCKER=true LAMBDA_REMOVE_CONTAINERS=true DEBUG=1 DATA_DIR=/tmp/localstack/data LOCALSTACK_HOSTNAME=localhost LOCALSTACK_API_KEY=[INSERT PRO KEY] AWS Client # AWS CLI Command Reference dynamodb DynamoDB # Core Components of Amazon DynamoDB Supported Data Types https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html aws --endpoint-url=http://localhost:4566 dynamodb list-tables aws --endpoint-url=http://localhost:4566 dynamodb create-table --table-name DEV_Settings_TEMP22 --attribute-definitions AttributeName=InstanceId,AttributeType=S AttributeName=SettingA,AttributeType=N --key-schema AttributeName=InstanceId,KeyType=HASH AttributeName=SettingA,KeyType=RANGE --billing-mode PAY_PER_REQUEST NoSQL Workbench # NoSQL Workbench Open NoSQL Workbench Add Connection Click \"DynamoDB Local\" Hostname: localhost | Port: 4566 Lambda Functions # https://aws.amazon.com/blogs/compute/introducing-the-net-6-runtime-for-aws-lambda/ https://docs.aws.amazon.com/lambda/latest/dg/lambda-csharp.html https://aws.amazon.com/blogs/developer/net-core-global-tools-for-aws/ dotnet new lambda.EmptyFunction --help Create Lambda Function # Install DotNet Lambda templates dotnet new -i Amazon.Lambda.Templates Install dotnet tool install -g Amazon.Lambda.Tools List templates dotnet new --list Run dotnet new serverless.AspNetCoreMinimalAPI --name MinimalApi dotnet build dotnet publish -c Release -o publish p:PublishReadyToRun=false zip content of the .\\publish\\ folder (function.zip) Create Deployment Package # Create Cdk folder and run cdk init app --language=csharp configure deployment settings (CdkStack.cs) // The code that defines your stack goes here var lambda = new Function ( this , \"MinimalApiNet6\" , new FunctionProps { Runtime = Runtime . DOTNET_6 , Code = Code . FromAsset ( \"../MinimalApi/bin/Debug/net6.0\" ), Handler = \"MinimalApi\" , FunctionName = \"minimalApiNet6\" }); var api = new LambdaRestApi ( this , \"APIGatewayNet6\" , new LambdaRestApiProps { RestApiName = \"APIGatewayNet6\" , Description = \"A simple Minimal API with .NET 6\" , Handler = lambda }); Emit the synthesized CloudFormation template cdk synth Test with LocalStack # npm install -g aws-cdk-local aws-cdk (ECR is a PRO feature https://github.com/localstack/localstack/issues/5382) cdklocal init app --language=csharp Change Stack.cs file cdklocal synth -v (this must be run where the cdk.json file is located. It creates the cdk.out folder) cdklocal bootstrap -v (if you get \"Unable to resolve AWS account to use.\" make sure the localstack service is running http://localhost:4566/health) cdklocal deploy -v Test endpoint using Postman Cognito # https://docs.aws.amazon.com/cognito/latest/developerguide/token-endpoint.html https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-verifying-a-jwt.html https://aws.amazon.com/premiumsupport/knowledge-center/decode-verify-cognito-json-token https://github.com/jagregory/cognito-local aws --endpoint-url=http://localhost:9229 cognito-idp create-user-pool-client --user-pool-id \"user-pool-test\" --client-name \"client-test2222\" --generate-secret --allowed-o-auth-flows client_credentials --explicit-auth-flows \"ALLOW_USER_PASSWORD_AUTH\" --allowed-o-auth-flows-user-pool-client --allowed-o-auth-flows-user-pool-client --allowed-o-auth-flows \"code\" \"implicit\" --allowed-o-auth-scopes \"openid\" --callback-urls \"[\"https://example.com\"]\" --supported-identity-providers \"[\"MySAMLIdP\", \"LoginWithAmazon\"]\" aws --endpoint-url=http://localhost:9229 cognito-idp list-user-pool-clients --user-pool-id \"user-pool-test\" aws --endpoint-url=http://localhost:9229 cognito-idp admin-create-user --user-pool-id \"user-pool-test\" --username \"testuser\" --temporary-password \"testpassword\" --user-attributes Name=email,Value=testuser@humanforce.com Name=phone_number,Value=\"+61455587898\" aws --endpoint-url=http://localhost:9229 cognito-idp admin-set-user-password --user-pool-id \"user-pool-test\" --username testuser --password \"testpassword\"--permanent aws --endpoint-url=http://localhost:9229 cognito-idp initiate-auth --auth-flow USER_PASSWORD_AUTH --auth-parameters USERNAME=testuser,PASSWORD=testpassword --client-id 2xtkp25fbng4z7hquw2p44mzx Cloud Formation # template.yaml: https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md Useful commands # awslocal lambda list-functions awslocal lambda invoke --function-name helloLambda --cli-binary-format raw-in-base64-out response.json --log-type Tail awslocal lambda delete-function --function-name helloLambda awslocal apigatewayv2 get-apis","title":"AWS"},{"location":"technology/AWS/#training","text":"AWS Workshops AWS Skill Builder Ramp-Up Guides Well-Architected Labs Training and Certification AWS Serverless SaaS Workshop","title":"Training"},{"location":"technology/AWS/#credentials","text":"C:\\Users{USER}.aws\\credentials","title":"Credentials"},{"location":"technology/AWS/#certification","text":"AWS Certified Cloud Practitioner | Training & Ramp-Up Guide AWS Certified Developer - Associate | Ramp-Up Guide AWS Certified DevOps Engineer - Professional | Ramp-Up Guide AWS Certified Solutions Architect \u2013 Associate & Professional | Ramp-Up Guide","title":"Certification"},{"location":"technology/AWS/#aws_cdk","text":"AWS Cloud Development Kit Getting started with the AWS CDK https://docs.aws.amazon.com/cdk/v2/guide/troubleshooting.html#troubleshooting_toolkit npm install -g aws-cdk or npm upgrade -g aws-cdk cdk --version","title":"AWS CDK"},{"location":"technology/AWS/#useful_commands","text":"dotnet build src compile this app cdk deploy deploy this stack to your default AWS account/region cdk diff compare deployed stack with current state cdk synth emits the synthesized CloudFormation template","title":"Useful Commands"},{"location":"technology/AWS/#sam","text":"What is the AWS Serverless Application Model (AWS SAM)? AWS Serverless Application Model winget install -e --id Amazon.SAM-CLI or winget upgrade -e --id Amazon.SAM-CLI sam --version Templates: Run sam init New-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem\" -Name \"LongPathsEnabled\" -Value 1 -PropertyType DWORD -Force","title":"SAM"},{"location":"technology/AWS/#aws_cli","text":"Install aws-cli winget install -e --id Amazon.AWSCLI","title":"AWS CLI"},{"location":"technology/AWS/#useful_commands_1","text":"aws --endpoint-url=http://localhost:4566 dynamodb create-table --table-name ServiceName_Setting --attribute-definitions AttributeName=TenantId,AttributeType=S --key-schema AttributeName=TenantId,KeyType=HASH --billing-mode PAY_PER_REQUEST aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name sample-queue2 aws --endpoint-url=http://localhost:4566 kms --region ap-southeast-2 create-key --tags TagKey=Purpose,TagValue=Test --description \"Development test key\" aws --endpoint-url=http://localhost:4566 kms encrypt --region ap-southeast-2 --key-id 1cc95196-acb1-4279-9063-a3daa3d9a20d --plaintext fileb://C:\\TEMP\\connectionstring.txt","title":"Useful Commands"},{"location":"technology/AWS/#localstack","text":"","title":"LocalStack"},{"location":"technology/AWS/#installation","text":"Run winget install -e --id Python.Python.3 Install pip py -m ensurepip --upgrade Install Docker winget install -e --id Docker.DockerDesktop Go to -> \"start\" and type \"Manage App Execution Aliases\". Go to it and turn off \"Python\" Install LocalStack Cockpit Install localstack-cli pip install localstack and check version `localstack --version Install awslocal pip install awscli-local and check version awslocal --version Install cdklocal npm install -g aws-cdk-local aws-cdk and check version cdklocal --version Browse http://localhost:4566/ and http://localhost:4566/health to test the setup","title":"Installation"},{"location":"technology/AWS/#reference","text":"AWS Service Feature Coverage Configuration","title":"Reference"},{"location":"technology/AWS/#environment_variables","text":"AWS_DEFAULT_REGION=ap-southeast-2 SERVICES=s3,sns,kms,sqs,lambda,dynamodb,iam,serverless,ecr,sts,ssm DYNAMODB_SHARE_DB=1 PERSIST_ALL=1 USE_SINGLE_REGION=true LAMBDA_EXECUTOR=docker LAMBDA_REMOTE_DOCKER=true LAMBDA_REMOVE_CONTAINERS=true DEBUG=1 DATA_DIR=/tmp/localstack/data LOCALSTACK_HOSTNAME=localhost LOCALSTACK_API_KEY=[INSERT PRO KEY]","title":"Environment Variables"},{"location":"technology/AWS/#aws_client","text":"AWS CLI Command Reference dynamodb","title":"AWS Client"},{"location":"technology/AWS/#dynamodb","text":"Core Components of Amazon DynamoDB Supported Data Types https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html aws --endpoint-url=http://localhost:4566 dynamodb list-tables aws --endpoint-url=http://localhost:4566 dynamodb create-table --table-name DEV_Settings_TEMP22 --attribute-definitions AttributeName=InstanceId,AttributeType=S AttributeName=SettingA,AttributeType=N --key-schema AttributeName=InstanceId,KeyType=HASH AttributeName=SettingA,KeyType=RANGE --billing-mode PAY_PER_REQUEST","title":"DynamoDB"},{"location":"technology/AWS/#nosql_workbench","text":"NoSQL Workbench Open NoSQL Workbench Add Connection Click \"DynamoDB Local\" Hostname: localhost | Port: 4566","title":"NoSQL Workbench"},{"location":"technology/AWS/#lambda_functions","text":"https://aws.amazon.com/blogs/compute/introducing-the-net-6-runtime-for-aws-lambda/ https://docs.aws.amazon.com/lambda/latest/dg/lambda-csharp.html https://aws.amazon.com/blogs/developer/net-core-global-tools-for-aws/ dotnet new lambda.EmptyFunction --help","title":"Lambda Functions"},{"location":"technology/AWS/#create_lambda_function","text":"Install DotNet Lambda templates dotnet new -i Amazon.Lambda.Templates Install dotnet tool install -g Amazon.Lambda.Tools List templates dotnet new --list Run dotnet new serverless.AspNetCoreMinimalAPI --name MinimalApi dotnet build dotnet publish -c Release -o publish p:PublishReadyToRun=false zip content of the .\\publish\\ folder (function.zip)","title":"Create Lambda Function"},{"location":"technology/AWS/#create_deployment_package","text":"Create Cdk folder and run cdk init app --language=csharp configure deployment settings (CdkStack.cs) // The code that defines your stack goes here var lambda = new Function ( this , \"MinimalApiNet6\" , new FunctionProps { Runtime = Runtime . DOTNET_6 , Code = Code . FromAsset ( \"../MinimalApi/bin/Debug/net6.0\" ), Handler = \"MinimalApi\" , FunctionName = \"minimalApiNet6\" }); var api = new LambdaRestApi ( this , \"APIGatewayNet6\" , new LambdaRestApiProps { RestApiName = \"APIGatewayNet6\" , Description = \"A simple Minimal API with .NET 6\" , Handler = lambda }); Emit the synthesized CloudFormation template cdk synth","title":"Create Deployment Package"},{"location":"technology/AWS/#test_with_localstack","text":"npm install -g aws-cdk-local aws-cdk (ECR is a PRO feature https://github.com/localstack/localstack/issues/5382) cdklocal init app --language=csharp Change Stack.cs file cdklocal synth -v (this must be run where the cdk.json file is located. It creates the cdk.out folder) cdklocal bootstrap -v (if you get \"Unable to resolve AWS account to use.\" make sure the localstack service is running http://localhost:4566/health) cdklocal deploy -v Test endpoint using Postman","title":"Test with LocalStack"},{"location":"technology/AWS/#cognito","text":"https://docs.aws.amazon.com/cognito/latest/developerguide/token-endpoint.html https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-verifying-a-jwt.html https://aws.amazon.com/premiumsupport/knowledge-center/decode-verify-cognito-json-token https://github.com/jagregory/cognito-local aws --endpoint-url=http://localhost:9229 cognito-idp create-user-pool-client --user-pool-id \"user-pool-test\" --client-name \"client-test2222\" --generate-secret --allowed-o-auth-flows client_credentials --explicit-auth-flows \"ALLOW_USER_PASSWORD_AUTH\" --allowed-o-auth-flows-user-pool-client --allowed-o-auth-flows-user-pool-client --allowed-o-auth-flows \"code\" \"implicit\" --allowed-o-auth-scopes \"openid\" --callback-urls \"[\"https://example.com\"]\" --supported-identity-providers \"[\"MySAMLIdP\", \"LoginWithAmazon\"]\" aws --endpoint-url=http://localhost:9229 cognito-idp list-user-pool-clients --user-pool-id \"user-pool-test\" aws --endpoint-url=http://localhost:9229 cognito-idp admin-create-user --user-pool-id \"user-pool-test\" --username \"testuser\" --temporary-password \"testpassword\" --user-attributes Name=email,Value=testuser@humanforce.com Name=phone_number,Value=\"+61455587898\" aws --endpoint-url=http://localhost:9229 cognito-idp admin-set-user-password --user-pool-id \"user-pool-test\" --username testuser --password \"testpassword\"--permanent aws --endpoint-url=http://localhost:9229 cognito-idp initiate-auth --auth-flow USER_PASSWORD_AUTH --auth-parameters USERNAME=testuser,PASSWORD=testpassword --client-id 2xtkp25fbng4z7hquw2p44mzx","title":"Cognito"},{"location":"technology/AWS/#cloud_formation","text":"template.yaml: https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md","title":"Cloud Formation"},{"location":"technology/AWS/#useful_commands_2","text":"awslocal lambda list-functions awslocal lambda invoke --function-name helloLambda --cli-binary-format raw-in-base64-out response.json --log-type Tail awslocal lambda delete-function --function-name helloLambda awslocal apigatewayv2 get-apis","title":"Useful commands"},{"location":"technology/Angular/","text":"Training # Introduction to Angular: Codelab | Video Tools # the latest NodeJS LTS is required Install Angular CLI Tool npm install -g @angular/cli Check the Installation ng --version Install Angular Language Service for VS Code code --install-extension angular.ng-template Create a new Angular App # Run ng new NewApp.UI --strict false Would you like to add Angular routing? Yes Which stylesheet format would you like to use? CSS Navigate to the NewApp.UI folder Run ng serve (Angular Development Server) Running locally # Development server # Run ng serve for a dev server. Navigate to http://localhost:4200/ . The app will automatically reload if you change any of the source files. Code scaffolding # Run ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module . Build # Run ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build. Running unit tests # Run ng test to execute the unit tests via Karma . Running end-to-end tests # Run ng e2e to execute the end-to-end tests via Protractor . Install Dependencies # Run npm install By default, it will install all modules listed as dependencies in the package.json file. https://docs.npmjs.com/cli/v6/commands/npm-install Generate Library # https://angular.io/guide/creating-libraries ng new my-workspace --no-create-application cd my-workspace ng generate library my-lib Generate Component # https://angular.io/tutorial/toh-pt3 ng generate component user-card https://github.com/leandromonaco/Workbench/commit/b50ce6b655b6f1747ee6d313955eef228584cf6d","title":"Angular"},{"location":"technology/Angular/#training","text":"Introduction to Angular: Codelab | Video","title":"Training"},{"location":"technology/Angular/#tools","text":"the latest NodeJS LTS is required Install Angular CLI Tool npm install -g @angular/cli Check the Installation ng --version Install Angular Language Service for VS Code code --install-extension angular.ng-template","title":"Tools"},{"location":"technology/Angular/#create_a_new_angular_app","text":"Run ng new NewApp.UI --strict false Would you like to add Angular routing? Yes Which stylesheet format would you like to use? CSS Navigate to the NewApp.UI folder Run ng serve (Angular Development Server)","title":"Create a new Angular App"},{"location":"technology/Angular/#running_locally","text":"","title":"Running locally"},{"location":"technology/Angular/#development_server","text":"Run ng serve for a dev server. Navigate to http://localhost:4200/ . The app will automatically reload if you change any of the source files.","title":"Development server"},{"location":"technology/Angular/#code_scaffolding","text":"Run ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module .","title":"Code scaffolding"},{"location":"technology/Angular/#build","text":"Run ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.","title":"Build"},{"location":"technology/Angular/#running_unit_tests","text":"Run ng test to execute the unit tests via Karma .","title":"Running unit tests"},{"location":"technology/Angular/#running_end-to-end_tests","text":"Run ng e2e to execute the end-to-end tests via Protractor .","title":"Running end-to-end tests"},{"location":"technology/Angular/#install_dependencies","text":"Run npm install By default, it will install all modules listed as dependencies in the package.json file. https://docs.npmjs.com/cli/v6/commands/npm-install","title":"Install Dependencies"},{"location":"technology/Angular/#generate_library","text":"https://angular.io/guide/creating-libraries ng new my-workspace --no-create-application cd my-workspace ng generate library my-lib","title":"Generate Library"},{"location":"technology/Angular/#generate_component","text":"https://angular.io/tutorial/toh-pt3 ng generate component user-card https://github.com/leandromonaco/Workbench/commit/b50ce6b655b6f1747ee6d313955eef228584cf6d","title":"Generate Component"},{"location":"technology/Architecture/","text":"Reference Material https://martinfowler.com/microservices/ https://dotnet.microsoft.com/en-us/learn/aspnet/microservices-architecture CQRS Pattern: https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs https://docs.microsoft.com/en-us/azure/architecture/patterns/ https://github.com/jasontaylordev/CleanArchitecture https://github.com/ardalis/CleanArchitecture https://docs.microsoft.com/en-us/dotnet/architecture/modern-web-apps-azure/common-web-application-architectures","title":"Architecture"},{"location":"technology/Authentication/","text":"JWT # A JWT is a set of claims (JSON property\u2013value pairs) that together make up a JSON object. It consists of three parts: Header: Consists of two properties: { \"alg\": \"HS256\", \"typ\": \"JWT\" }. alg is the algorithm that is used to encrypt the JWT. Payload: This is where the data to be sent is stored; this data is stored as JSON property\u2013value pairs. Signature: This is created by encrypting, with the algorithm specified in the header: (i) the base64Url-encoded header, (ii) base64Url-encoded payload (iii) a secret (or a private key) Format: {header}.{payload}.{signature} https://openid.net/specs/draft-jones-json-web-token-07.html#ExampleJWT Encryption # Symmetric key and asymmetric keys A JWT can be encrypted using either a symmetric key (shared secret) or asymmetric keys (the private key of a private\u2013public pair). Symmetric key: Both encryption (JWT signing) and verification are done with the symmetric key\u2014also known as the shared secret. Asymmetric keys: The encryption (JWT signing) is done with the private key, and verification is done with the public key. AWS KMS # aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 create-key --key-spec RSA_2048 --key-usage SIGN_VERIFY aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 list-keys aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 get-public-key --key-id 6732c7ca-6ec9-4b96-9711-fd1c7d637c8e Reference # A Beginner's Guide to JWTs for more information https://openid.net/ https://jwt.io/ https://aws.amazon.com/kms/","title":"JWT"},{"location":"technology/Authentication/#jwt","text":"A JWT is a set of claims (JSON property\u2013value pairs) that together make up a JSON object. It consists of three parts: Header: Consists of two properties: { \"alg\": \"HS256\", \"typ\": \"JWT\" }. alg is the algorithm that is used to encrypt the JWT. Payload: This is where the data to be sent is stored; this data is stored as JSON property\u2013value pairs. Signature: This is created by encrypting, with the algorithm specified in the header: (i) the base64Url-encoded header, (ii) base64Url-encoded payload (iii) a secret (or a private key) Format: {header}.{payload}.{signature} https://openid.net/specs/draft-jones-json-web-token-07.html#ExampleJWT","title":"JWT"},{"location":"technology/Authentication/#encryption","text":"Symmetric key and asymmetric keys A JWT can be encrypted using either a symmetric key (shared secret) or asymmetric keys (the private key of a private\u2013public pair). Symmetric key: Both encryption (JWT signing) and verification are done with the symmetric key\u2014also known as the shared secret. Asymmetric keys: The encryption (JWT signing) is done with the private key, and verification is done with the public key.","title":"Encryption"},{"location":"technology/Authentication/#aws_kms","text":"aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 create-key --key-spec RSA_2048 --key-usage SIGN_VERIFY aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 list-keys aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 get-public-key --key-id 6732c7ca-6ec9-4b96-9711-fd1c7d637c8e","title":"AWS KMS"},{"location":"technology/Authentication/#reference","text":"A Beginner's Guide to JWTs for more information https://openid.net/ https://jwt.io/ https://aws.amazon.com/kms/","title":"Reference"},{"location":"technology/CSS/","text":"","title":"CSS"},{"location":"technology/Certificates/","text":"Create Self-Signed SSL Certificate # Open a command prompt window Run ubuntu Copy and Paste the following code. This will generate a .crt and a .key using OpenSSL PARENT=\"localhost\" openssl req \\ -x509 \\ -newkey rsa:4096 \\ -sha256 \\ -days 18250 \\ -nodes \\ -keyout $PARENT.key \\ -out $PARENT.crt \\ -subj \"/CN=${PARENT}\" \\ -extensions v3_ca \\ -extensions v3_req \\ -config <( \\ echo '[req]'; \\ echo 'default_bits= 4096'; \\ echo 'distinguished_name=req'; \\ echo 'x509_extension = v3_ca'; \\ echo 'req_extensions = v3_req'; \\ echo '[v3_req]'; \\ echo 'basicConstraints = CA:FALSE'; \\ echo 'keyUsage = nonRepudiation, digitalSignature, keyEncipherment'; \\ echo 'subjectAltName = @alt_names'; \\ echo '[ alt_names ]'; \\ echo \"DNS.1 = ${PARENT}\"; \\ echo '[ v3_ca ]'; \\ echo 'subjectKeyIdentifier=hash'; \\ echo 'authorityKeyIdentifier=keyid:always,issuer'; \\ echo 'basicConstraints = critical, CA:TRUE, pathlen:0'; \\ echo 'keyUsage = critical, cRLSign, keyCertSign'; \\ echo 'extendedKeyUsage = serverAuth, clientAuth') openssl x509 -noout -text -in $PARENT.crt Run openssl pkcs12 -export -out $PARENT.pfx -inkey $PARENT.key -in $PARENT.crt to get a .pfx Run explorer.exe . to open Windows Explorer and get the Certificate files Notes CRT file does not contain the private key KEY file contains the private key PFX file contains the private key, but it's protected by a password (eg. 12345) Import Self-Signed SSL Certificate # Reference - Import-PfxCertificate - Trusted Root Certification Authorities Certificate Store Open a PowerShell window with admin rights Run Get-Credential -UserName 'Enter password below' -Message 'Enter password below' Run Import-PfxCertificate -FilePath \"C:\\GitHub\\Workbench\\Misc\\SSL\\localhost.pfx\" -CertStoreLocation Cert:\\LocalMachine\\Root\\ -Password $mypwd.Password Configure Certificate in ASP.NET # See Documentation See Example Configure Certificate in Angular # See Documentation See Example Manage Certificate Private keys # Go to Windows -> type \"run\" -> mmc Once the mmc window is up -> Add Snap-in -> Add certificate -> Local Computer Go to Personal -> Certificate -> Select the certificate Right Click Certificate -> All tasks -> Manage Private keys Notes: - Private key must be exportable when installing the certificate - In Windows 10 1809, it seems that the Manage Private Keys option is available only to certificates in the Personal store. The workaround is to drag and drop the certificate there, add permissions as needed and drag it back to where you need it. Reference Material # https://howhttps.works/","title":"Certificates"},{"location":"technology/Certificates/#create_self-signed_ssl_certificate","text":"Open a command prompt window Run ubuntu Copy and Paste the following code. This will generate a .crt and a .key using OpenSSL PARENT=\"localhost\" openssl req \\ -x509 \\ -newkey rsa:4096 \\ -sha256 \\ -days 18250 \\ -nodes \\ -keyout $PARENT.key \\ -out $PARENT.crt \\ -subj \"/CN=${PARENT}\" \\ -extensions v3_ca \\ -extensions v3_req \\ -config <( \\ echo '[req]'; \\ echo 'default_bits= 4096'; \\ echo 'distinguished_name=req'; \\ echo 'x509_extension = v3_ca'; \\ echo 'req_extensions = v3_req'; \\ echo '[v3_req]'; \\ echo 'basicConstraints = CA:FALSE'; \\ echo 'keyUsage = nonRepudiation, digitalSignature, keyEncipherment'; \\ echo 'subjectAltName = @alt_names'; \\ echo '[ alt_names ]'; \\ echo \"DNS.1 = ${PARENT}\"; \\ echo '[ v3_ca ]'; \\ echo 'subjectKeyIdentifier=hash'; \\ echo 'authorityKeyIdentifier=keyid:always,issuer'; \\ echo 'basicConstraints = critical, CA:TRUE, pathlen:0'; \\ echo 'keyUsage = critical, cRLSign, keyCertSign'; \\ echo 'extendedKeyUsage = serverAuth, clientAuth') openssl x509 -noout -text -in $PARENT.crt Run openssl pkcs12 -export -out $PARENT.pfx -inkey $PARENT.key -in $PARENT.crt to get a .pfx Run explorer.exe . to open Windows Explorer and get the Certificate files Notes CRT file does not contain the private key KEY file contains the private key PFX file contains the private key, but it's protected by a password (eg. 12345)","title":"Create Self-Signed SSL Certificate"},{"location":"technology/Certificates/#import_self-signed_ssl_certificate","text":"Reference - Import-PfxCertificate - Trusted Root Certification Authorities Certificate Store Open a PowerShell window with admin rights Run Get-Credential -UserName 'Enter password below' -Message 'Enter password below' Run Import-PfxCertificate -FilePath \"C:\\GitHub\\Workbench\\Misc\\SSL\\localhost.pfx\" -CertStoreLocation Cert:\\LocalMachine\\Root\\ -Password $mypwd.Password","title":"Import Self-Signed SSL Certificate"},{"location":"technology/Certificates/#configure_certificate_in_aspnet","text":"See Documentation See Example","title":"Configure Certificate in ASP.NET"},{"location":"technology/Certificates/#configure_certificate_in_angular","text":"See Documentation See Example","title":"Configure Certificate in Angular"},{"location":"technology/Certificates/#manage_certificate_private_keys","text":"Go to Windows -> type \"run\" -> mmc Once the mmc window is up -> Add Snap-in -> Add certificate -> Local Computer Go to Personal -> Certificate -> Select the certificate Right Click Certificate -> All tasks -> Manage Private keys Notes: - Private key must be exportable when installing the certificate - In Windows 10 1809, it seems that the Manage Private Keys option is available only to certificates in the Personal store. The workaround is to drag and drop the certificate there, add permissions as needed and drag it back to where you need it.","title":"Manage Certificate Private keys"},{"location":"technology/Certificates/#reference_material","text":"https://howhttps.works/","title":"Reference Material"},{"location":"technology/Configuration/","text":"Code # private static ConfigurationManager GetConfiguration ( ConfigurationManager configurationManager ) { configurationManager . SetBasePath ( Environment . CurrentDirectory ) . AddJsonFile ( \"appsettings.json\" , optional : false , reloadOnChange : true ) . AddJsonFile ( $\"appsettings.Development.json\" , optional : true , reloadOnChange : true ) . AddEnvironmentVariables ( \"AppPrefix:\" ) . Build (); return configurationManager ; } Cross-Platform Support # The : separator doesn't work with environment variable hierarchical keys on all platforms. __, the double underscore, is supported by all platforms. Note AppPrefix:ModuleConfiguration:Infrastructure:Redis:Port would need to be translated to AppPrefix__ModuleConfiguration__Infrastructure__Redis__Port Set Environment Variable # Warning When creating/removing Environment Variables, Visual Studio MUST be restarted to pick up the changes. setx Lambda__ModuleConfiguration__Infrastructure__Cognito__ValidIssuer \"SOME VALUE\" /M setx Lambda__ModuleConfiguration__Infrastructure__Cognito__ClientId \"SOME VALUE\" /M setx ASPNETCORE_ENVIRONMENT \"Development\" /M or setx ASPNETCORE_ENVIRONMENT \"Staging\" /M or setx ASPNETCORE_ENVIRONMENT \"Production\" /M References # https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/setx https://stackoverflow.com/questions/53870781/asp-net-core-addenvironmentvariables-doesnt-load-variables","title":"Code"},{"location":"technology/Configuration/#code","text":"private static ConfigurationManager GetConfiguration ( ConfigurationManager configurationManager ) { configurationManager . SetBasePath ( Environment . CurrentDirectory ) . AddJsonFile ( \"appsettings.json\" , optional : false , reloadOnChange : true ) . AddJsonFile ( $\"appsettings.Development.json\" , optional : true , reloadOnChange : true ) . AddEnvironmentVariables ( \"AppPrefix:\" ) . Build (); return configurationManager ; }","title":"Code"},{"location":"technology/Configuration/#cross-platform_support","text":"The : separator doesn't work with environment variable hierarchical keys on all platforms. __, the double underscore, is supported by all platforms. Note AppPrefix:ModuleConfiguration:Infrastructure:Redis:Port would need to be translated to AppPrefix__ModuleConfiguration__Infrastructure__Redis__Port","title":"Cross-Platform Support"},{"location":"technology/Configuration/#set_environment_variable","text":"Warning When creating/removing Environment Variables, Visual Studio MUST be restarted to pick up the changes. setx Lambda__ModuleConfiguration__Infrastructure__Cognito__ValidIssuer \"SOME VALUE\" /M setx Lambda__ModuleConfiguration__Infrastructure__Cognito__ClientId \"SOME VALUE\" /M setx ASPNETCORE_ENVIRONMENT \"Development\" /M or setx ASPNETCORE_ENVIRONMENT \"Staging\" /M or setx ASPNETCORE_ENVIRONMENT \"Production\" /M","title":"Set Environment Variable"},{"location":"technology/Configuration/#references","text":"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/setx https://stackoverflow.com/questions/53870781/asp-net-core-addenvironmentvariables-doesnt-load-variables","title":"References"},{"location":"technology/DevelopmentMachineSetup/","text":"1 - Install WinGet # Install from https://aka.ms/getwinget Check installation with winget --version Reference Material # winget install --help - https://aka.ms/winget-command-help - https://docs.microsoft.com/en-us/windows/package-manager/winget/install - The Windows Package Manager Manifest Creator command-line tool 2 - Install WSL with Ubuntu # Documentation: https://help.ubuntu.com Management: https://landscape.canonical.com Support: https://ubuntu.com/advantage Open Powershell window with admin rights Run wsl --install -d Ubuntu Create a default UNIX user account 3 - Install GIT # winget install -e --id Git.Git winget install -e --id GitHub.GitHubDesktop winget install -e --id GitHub.cli winget install -e --id GitHub.GitLFS winget install -e --id Microsoft.Git winget install -e --id Microsoft.VFSforGit winget install -e --id Microsoft.GitCredentialManagerCore winget install -e --id Atlassian.Sourcetree winget install -e --id TortoiseGit.TortoiseGit 4 - Install NodeJS # Warning Each time a new NodeJS version is installed, tools like Angular CLI must be re-installed https://github.com/coreybutler/nvm-windows/releases Click on nvm-setup.zip Extract and install it (Reboot might be required) Run nvm --version to verify if your nvm installation was successful. NVM Commands: nvm install latest nvm install lts nvm list nvm use lts nvm current 5 - Install Angular CLI Tool # the latest NodeJS LTS is required Run npm install -g @angular/cli Run ng --version 6 - Install Visual Studio & .NET Frameworks # Search .NET Versions winget search --id Microsoft.dotnet winget install -e --id Microsoft.dotnet -v 6.1.21.52711 winget install -e --id Microsoft.dotnet winget install -e --id Microsoft.dotnetHostingBundle winget install -e --id Microsoft.DotNet.Runtime.3_1 winget install -e --id Microsoft.DotNet.AspNetCore.3_1 winget install -e --id Microsoft.DotNet.Runtime.5 winget install -e --id Microsoft.DotNet.AspNetCore.5 winget install -e --id Microsoft.DotNet.Runtime.6 winget install -e --id Microsoft.DotNet.AspNetCore.6 winget install -e --id Microsoft.dotNetFramework winget install -e --id Microsoft.VisualStudioCode winget install -e --id Microsoft.VisualStudio.2019.Professional winget install -e --id Microsoft.VisualStudio.2022.Enterprise winget install -e --id Microsoft.VisualStudio.2022.TestController winget install -e --id Microsoft.VisualStudio.2022.TestAgent winget install -e --id Microsoft.VisualStudio.2022.TeamExplorer winget install -e --id Microsoft.VisualStudio.2022.Professional winget install -e --id Microsoft.VisualStudio.2022.Enterprise winget install -e --id Microsoft.VisualStudio.2022.Community winget install -e --id Microsoft.VisualStudio.2022.BuildTools Reference Material # Import or export installation configurations 7 - Install SQL Server # winget install -e --id Microsoft.SQLServer.2019.Express winget install -e --id Microsoft.SQLServer.2019.Developer --override '/QUIET /IACCEPTSQLSERVERLICENSETERMS /CONFIGURATIONFILE=\"C:\\Dev\\SQLConfigurationFile.ini\"' winget install -e --id Microsoft.SQLServerManagementStudio SQLConfigurationFile.ini # ; Microsoft SQL Server Configuration file [OPTIONS] ; Specifies a Setup work flow, like INSTALL, UNINSTALL, or UPGRADE. ; This is a required parameter. ACTION=\"Install\" ; Specifies features to install, uninstall, or upgrade. ; The list of top-level features include SQL, AS, RS, IS, and Tools. ; The SQL feature will install the database engine, replication, and full-text. ; The Tools feature will install Management Tools, Books online, ; SQL Server Data Tools, and other shared components. FEATURES=SQL,Tools INSTANCENAME=SQL2019Dev SQLSYSADMINACCOUNTS=\"[Domain]\\[Username]\" SECURITYMODE=SQL SAPWD=\"M3rz0ug4!!!!\" Reference Material # Install SQL Server from the Command Prompt Install SQL Server using a configuration file 8 - Enable Windows Features (Windows 10) # List all features: DISM /online /get-features /Format:Table DISM /online /enable-feature /featurename:IIS-WebServerRole DISM /online /enable-feature /featurename:IIS-WebServerManagementTools DISM /online /enable-feature /featurename:IIS-ManagementConsole DISM /online /enable-feature /featurename:IIS-NetFxExtensibility45 DISM /online /enable-feature /featurename:IIS-ISAPIExtensions DISM /online /enable-feature /featurename:IIS-ISAPIFilter DISM /online /enable-feature /featurename:IIS-ASPNET45 DISM /online /enable-feature /featurename:IIS-DefaultDocument DISM /online /enable-feature /featurename:IIS-DirectoryBrowsing DISM /online /enable-feature /featurename:IIS-HttpErrors DISM /online /enable-feature /featurename:IIS-StaticContent DISM /online /enable-feature /featurename:IIS-HttpLogging DISM /online /enable-feature /featurename:IIS-HttpCompressionStatic DISM /online /enable-feature /featurename:IIS-Security DISM /online /enable-feature /featurename:IIS-IPSecurity DISM /online /enable-feature /featurename:IIS-BasicAuthentication DISM /online /enable-feature /featurename:IIS-WindowsAuthentication DISM /online /enable-feature /featurename:IIS-DigestAuthentication DISM /online /enable-feature /featurename:IIS-URLAuthorization DISM /online /enable-feature /featurename:IIS-ClientCertificateMappingAuthentication DISM /online /enable-feature /featurename:IIS-IISCertificateMappingAuthentication DISM /online /enable-feature /featurename:IIS-CertProvider Reference Material # DISM - Deployment Image Servicing and Management DISM /online /get-features /format:table DISM /online /get-featureinfo /featurename:[feature name] DISM /online /disable-feature /featurename:[feature name] DISM /online /enable-feature /featurename:[feature name] 9 - Install Certificates # Run Import-Certificate -FilePath \"C:\\Dev\\SSL\\MyLocalCertificateAuthority.crt\" -CertStoreLocation Cert:\\LocalMachine\\Root\\ Run $mypwd = ConvertTo-SecureString \"P@ssW0rD!\" -AsPlainText -Force Run Import-PfxCertificate -FilePath \"C:\\Dev\\SSL\\mydomain.com.pfx\" -CertStoreLocation Cert:\\LocalMachine\\My\\ -Password $mypwd.Password Optional $mypwd = Get-Credential -UserName 'Enter password below' -Message 'Enter password below' 10 - Install VSCode Extensions # code --install-extension amazonwebservices.aws-toolkit-vscode code --install-extension angular.ng-template code --install-extension johnpapa.angular-essentials code --install-extension johnpapa.angular2 code --install-extension kendoui.kendotemplatewizard code --install-extension dbaeumer.vscode-eslint code --install-extension ms-vscode.vscode-typescript-next code --install-extension ms-vscode.powershell code --install-extension ms-dotnettools.csharp code --install-extension ms-azuretools.vscode-docker code --install-extension ms-kubernetes-tools.vscode-kubernetes-tools code --install-extension ms-vsliveshare.vsliveshare code --install-extension esbenp.prettier-vscode code --install-extension ms-edgedevtools.vscode-edge-devtools code --install-extension GitHub.codespaces code --install-extension GitHub.remotehub code --install-extension GitHub.vscode-codeql code --install-extension GitHub.classroom code --install-extension Atlassian.atlascode code --install-extension ms-playwright.playwright code --install-extension vsblox.blox code --install-extension bierner.markdown-mermaid code --install-extension pflannery.vscode-versionlens code --install-extension wix.vscode-import-cost code --install-extension eamodio.gitlens code --install-extension pranaygp.vscode-css-peek code --install-extension usernamehw.errorlens code --install-extension ms-azuretools.vscode-tye code --install-extension SonarSource.sonarlint-vscode code --install-extension quicktype.quicktype code --install-extension ms-dotnettools.dotnet-interactive-vscode 10 - Install Visual Studio 2022 Extensions # #Credits: https://gist.github.com/ScottHutchinson/b22339c3d3688da5c9b477281e258400 #$PackageName = \"AmazonWebServices.AWSToolkitforVisualStudio2022\" #$PackageName = \"GitHub.copilotvs\" #$PackageName = \"SteveCadwallader.CodeMaid\" #$PackageName = \"SteveCadwallader.CodeMaidVS2022\" #$PackageName = \"ironcev.sharpen\" #$PackageName = \"SonarSource.SonarLintforVisualStudio2022\" #$PackageName = \"DevExpress.CodeRushforVS2022\" $PackageName = \"MLNET.notebook\" $ErrorActionPreference = \"Stop\" $baseProtocol = \"https:\" $baseHostName = \"marketplace.visualstudio.com\" $Uri = \" $( $baseProtocol ) // $( $baseHostName ) /items?itemName= $( $PackageName ) \" $VsixLocation = \" $( $env:Temp ) \\ $( [guid] :: NewGuid ()) .vsix\" $VSInstallDir = \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\ServiceHub\\Services\\Microsoft.VisualStudio.Setup.Service\" if ( -Not $VSInstallDir ) { Write-Error \"Visual Studio InstallDir registry key missing\" Exit 1 } Write-Host \"Grabbing VSIX extension at $( $Uri ) \" $HTML = Invoke-WebRequest -Uri $Uri -UseBasicParsing -SessionVariable session Write-Host \"Attempting to download $( $PackageName ) ...\" $anchor = $HTML . Links | Where-Object { $_ . class -eq 'install-button-container' } | Select-Object -ExpandProperty href if ( -Not $anchor ) { Write-Error \"Could not find download anchor tag on the Visual Studio Extensions page\" Exit 1 } Write-Host \"Anchor is $( $anchor ) \" $href = \" $( $baseProtocol ) // $( $baseHostName )$( $anchor ) \" Write-Host \"Href is $( $href ) \" Invoke-WebRequest $href -OutFile $VsixLocation -WebSession $session if ( -Not ( Test-Path $VsixLocation )) { Write-Error \"Downloaded VSIX file could not be located\" Exit 1 } Write-Host \"VSInstallDir is $( $VSInstallDir ) \" Write-Host \"VsixLocation is $( $VsixLocation ) \" Write-Host \"Installing $( $PackageName ) ...\" Start-Process -Filepath \" $( $VSInstallDir ) \\VSIXInstaller\" -ArgumentList \"/q /a $( $VsixLocation ) \" -Wait Write-Host \"Cleanup...\" rm $VsixLocation Write-Host \"Installation of $( $PackageName ) complete!\" Create IIS Websites # Powershell 7+ is required Run Install-Module -Name IISAdministration -Scope AllUsers -AllowClobber Run New-IISSite -Name 'website_name' -PhysicalPath 'C:\\Inetpub\\wwwroot' -BindingInformation \"*:443:hostname1.com\" -Protocol https -SslFlag \"Sni\" -CertificateThumbPrint \"[Insert Thumbprint]\" -CertStoreLocation \"Cert:\\LocalMachine\\My\" -Force Run New-IISSiteBinding -Name \"website_name\" -BindingInformation \"*:443:hostname2.com\" -Protocol https -SslFlag \"Sni\" -CertificateThumbPrint \"[Insert Thumbprint]\" -CertStoreLocation \"Cert:\\LocalMachine\\My\" -Force Change host file # $HostFile = 'C:\\Windows\\System32\\drivers\\etc\\hosts' # Create a backup copy of the Hosts file $dateFormat = ( Get-Date ). ToString ( 'dd-MM-yyyy hh-mm-ss' ) $FileCopy = $HostFile + '.' + $dateFormat + '.copy' Copy-Item $HostFile -Destination $FileCopy $Bindings = Get-IISSiteBinding \"websitename.com\" # Get the contents of the Hosts file $File = Get-Content $HostFile # write the Entries to hosts file, if it doesn't exist. foreach ( $Binding in $Bindings ) { $HostFileEntry = $Binding . bindingInformation $HostFileEntry = $HostFileEntry -replace \"\\*:443:\" , \"\" Write-Host \"Checking existing HOST file entries for $HostFileEntry...\" #Set a Flag $EntryExists = $false if ( $File -contains \"127.0.0.1 `t $HostFileEntry\" ) { Write-Host \"Host File Entry for $HostFileEntry already exists.\" $EntryExists = $true } #Add Entry to Host File if (! $EntryExists ) { Write-host \"Adding Host File Entry for $HostFileEntry\" Add-content -path $HostFile -value \"127.0.0.1 `t $HostFileEntry\" } } Configure IP/Port Mapping # Overview # Actions # Started my server on localhost:8081 Added my \"local DNS\" in the hosts file as a new line (127.65.43.21 example.app). Any free address in the network 127.0.0.0/8 (127.x.x.x) can be used. You can check with netstat -a -n -p TCP | grep \"LISTENING\" Added the following network configuration with netsh interface portproxy add v4tov4 listenport=80 listenaddress=127.65.43.21 connectport=8081 connectaddress=127.0.0.1 I can now access the server at http://example.app Notes # These commands/file modifications need to be executed with Admin rights netsh portproxy needs ipv6 libraries even only to use v4tov4, typically they will also be included by default, otherwise install them using the following command: netsh interface ipv6 install You can see the entry you have added with the command: netsh interface portproxy show v4tov4 You can remove the entry with the following command: netsh interface portproxy delete v4tov4 listenport=80 listenaddress=127.65.43.21 Links to Resources: Using Netsh Netsh commands for Interface IP Netsh commands for Interface Portproxy Windows Port Forwarding Example Browsers # winget install -e --id Microsoft.Edge.Dev winget install -e --id BraveSoftware.BraveBrowser winget install -e --id Microsoft.Edge winget install -e --id Google.Chrome.Dev winget install -e --id Mozilla.Firefox.DeveloperEdition winget install -e --id Opera.Opera Dev Tools # winget install -e --id Postman.Postman winget install -e --id Docker.DockerDesktop winget install -e --id Datalust.Seq winget install -e --id Microsoft.DeploymentToolkit winget install -e --id Microsoft.webpicmd winget install -e --id qishibo.AnotherRedisDesktopManager winget install -e --id Microsoft.PowerShell winget install -e --id Microsoft.PowerShell.Preview winget install -e --id Microsoft.PowerAutomateDesktop winget install -e --id Gauge.Gauge Command Prompt Setup # Run winget install JanDeDobbeleer.OhMyPosh -s winget Run Install-Module PSReadLine -AllowPrerelease -Force Run notepad $PROFILE and add these lines oh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH\\jandedobbeleer.omp.json\" | Invoke-Expression Import-Module PSReadLine Set-PSReadLineOption -PredictionSource History Set-PSReadLineOption -PredictionViewStyle ListView Set-PSReadLineOption -EditMode Windows Restart command prompt window References # Adding Predictive IntelliSense to my Windows Terminal PowerShell Prompt with PSReadline - Scott Hanselman's Blog Set up a custom prompt for PowerShell or WSL with Oh My Posh Development Utilities # dotnet tool install -g Microsoft.Tye --version \"0.11.0-alpha.22111.1\" winget install -e --id ScooterSoftware.BeyondCompare4 winget install -e --id LINQPad.LINQPad.7 winget install -e --id Microsoft.XMLNotepad winget install -e --id Notepad++.Notepad++ winget install -e --id WinMerge.WinMerge winget install -e --name Sysinternals winget install -e --id Microsoft.WindowsTerminal winget install -e --id Telerik.Fiddler.Everywhere winget install -e --id WiresharkFoundation.Wireshark winget install -e --id=Amazon.NoSQLWorkbench winget install DevToys Misc # winget install \"Files App\" winget install -e --id 7zip.7zip winget install -e --id Microsoft.PowerToys winget install -e --id VideoLAN.VLC winget install -e --id ShareX.ShareX winget install -e --id Grammarly.ForOffice winget install -e --id Grammarly.ForWindows winget install -e --id OBSProject.OBSStudio winget install -e --id JGraph.Draw winget install -e --id GIMP.GIMP AWS # winget install -e --id Amazon.AWSCLI winget install -e --id Amazon.SAM-CLI Azure # winget install -e --id Microsoft.AzureCLI Others # Custom Prompt Setup","title":"Development Machine Setup"},{"location":"technology/DevelopmentMachineSetup/#1_-_install_winget","text":"Install from https://aka.ms/getwinget Check installation with winget --version","title":"1 - Install WinGet"},{"location":"technology/DevelopmentMachineSetup/#reference_material","text":"winget install --help - https://aka.ms/winget-command-help - https://docs.microsoft.com/en-us/windows/package-manager/winget/install - The Windows Package Manager Manifest Creator command-line tool","title":"Reference Material"},{"location":"technology/DevelopmentMachineSetup/#2_-_install_wsl_with_ubuntu","text":"Documentation: https://help.ubuntu.com Management: https://landscape.canonical.com Support: https://ubuntu.com/advantage Open Powershell window with admin rights Run wsl --install -d Ubuntu Create a default UNIX user account","title":"2 - Install WSL with Ubuntu"},{"location":"technology/DevelopmentMachineSetup/#3_-_install_git","text":"winget install -e --id Git.Git winget install -e --id GitHub.GitHubDesktop winget install -e --id GitHub.cli winget install -e --id GitHub.GitLFS winget install -e --id Microsoft.Git winget install -e --id Microsoft.VFSforGit winget install -e --id Microsoft.GitCredentialManagerCore winget install -e --id Atlassian.Sourcetree winget install -e --id TortoiseGit.TortoiseGit","title":"3 - Install GIT"},{"location":"technology/DevelopmentMachineSetup/#4_-_install_nodejs","text":"Warning Each time a new NodeJS version is installed, tools like Angular CLI must be re-installed https://github.com/coreybutler/nvm-windows/releases Click on nvm-setup.zip Extract and install it (Reboot might be required) Run nvm --version to verify if your nvm installation was successful. NVM Commands: nvm install latest nvm install lts nvm list nvm use lts nvm current","title":"4 - Install NodeJS"},{"location":"technology/DevelopmentMachineSetup/#5_-_install_angular_cli_tool","text":"the latest NodeJS LTS is required Run npm install -g @angular/cli Run ng --version","title":"5 - Install Angular CLI Tool"},{"location":"technology/DevelopmentMachineSetup/#6_-_install_visual_studio_net_frameworks","text":"Search .NET Versions winget search --id Microsoft.dotnet winget install -e --id Microsoft.dotnet -v 6.1.21.52711 winget install -e --id Microsoft.dotnet winget install -e --id Microsoft.dotnetHostingBundle winget install -e --id Microsoft.DotNet.Runtime.3_1 winget install -e --id Microsoft.DotNet.AspNetCore.3_1 winget install -e --id Microsoft.DotNet.Runtime.5 winget install -e --id Microsoft.DotNet.AspNetCore.5 winget install -e --id Microsoft.DotNet.Runtime.6 winget install -e --id Microsoft.DotNet.AspNetCore.6 winget install -e --id Microsoft.dotNetFramework winget install -e --id Microsoft.VisualStudioCode winget install -e --id Microsoft.VisualStudio.2019.Professional winget install -e --id Microsoft.VisualStudio.2022.Enterprise winget install -e --id Microsoft.VisualStudio.2022.TestController winget install -e --id Microsoft.VisualStudio.2022.TestAgent winget install -e --id Microsoft.VisualStudio.2022.TeamExplorer winget install -e --id Microsoft.VisualStudio.2022.Professional winget install -e --id Microsoft.VisualStudio.2022.Enterprise winget install -e --id Microsoft.VisualStudio.2022.Community winget install -e --id Microsoft.VisualStudio.2022.BuildTools","title":"6 - Install Visual Studio &amp; .NET Frameworks"},{"location":"technology/DevelopmentMachineSetup/#reference_material_1","text":"Import or export installation configurations","title":"Reference Material"},{"location":"technology/DevelopmentMachineSetup/#7_-_install_sql_server","text":"winget install -e --id Microsoft.SQLServer.2019.Express winget install -e --id Microsoft.SQLServer.2019.Developer --override '/QUIET /IACCEPTSQLSERVERLICENSETERMS /CONFIGURATIONFILE=\"C:\\Dev\\SQLConfigurationFile.ini\"' winget install -e --id Microsoft.SQLServerManagementStudio","title":"7 - Install SQL Server"},{"location":"technology/DevelopmentMachineSetup/#sqlconfigurationfileini","text":"; Microsoft SQL Server Configuration file [OPTIONS] ; Specifies a Setup work flow, like INSTALL, UNINSTALL, or UPGRADE. ; This is a required parameter. ACTION=\"Install\" ; Specifies features to install, uninstall, or upgrade. ; The list of top-level features include SQL, AS, RS, IS, and Tools. ; The SQL feature will install the database engine, replication, and full-text. ; The Tools feature will install Management Tools, Books online, ; SQL Server Data Tools, and other shared components. FEATURES=SQL,Tools INSTANCENAME=SQL2019Dev SQLSYSADMINACCOUNTS=\"[Domain]\\[Username]\" SECURITYMODE=SQL SAPWD=\"M3rz0ug4!!!!\"","title":"SQLConfigurationFile.ini"},{"location":"technology/DevelopmentMachineSetup/#reference_material_2","text":"Install SQL Server from the Command Prompt Install SQL Server using a configuration file","title":"Reference Material"},{"location":"technology/DevelopmentMachineSetup/#8_-_enable_windows_features_windows_10","text":"List all features: DISM /online /get-features /Format:Table DISM /online /enable-feature /featurename:IIS-WebServerRole DISM /online /enable-feature /featurename:IIS-WebServerManagementTools DISM /online /enable-feature /featurename:IIS-ManagementConsole DISM /online /enable-feature /featurename:IIS-NetFxExtensibility45 DISM /online /enable-feature /featurename:IIS-ISAPIExtensions DISM /online /enable-feature /featurename:IIS-ISAPIFilter DISM /online /enable-feature /featurename:IIS-ASPNET45 DISM /online /enable-feature /featurename:IIS-DefaultDocument DISM /online /enable-feature /featurename:IIS-DirectoryBrowsing DISM /online /enable-feature /featurename:IIS-HttpErrors DISM /online /enable-feature /featurename:IIS-StaticContent DISM /online /enable-feature /featurename:IIS-HttpLogging DISM /online /enable-feature /featurename:IIS-HttpCompressionStatic DISM /online /enable-feature /featurename:IIS-Security DISM /online /enable-feature /featurename:IIS-IPSecurity DISM /online /enable-feature /featurename:IIS-BasicAuthentication DISM /online /enable-feature /featurename:IIS-WindowsAuthentication DISM /online /enable-feature /featurename:IIS-DigestAuthentication DISM /online /enable-feature /featurename:IIS-URLAuthorization DISM /online /enable-feature /featurename:IIS-ClientCertificateMappingAuthentication DISM /online /enable-feature /featurename:IIS-IISCertificateMappingAuthentication DISM /online /enable-feature /featurename:IIS-CertProvider","title":"8 - Enable Windows Features (Windows 10)"},{"location":"technology/DevelopmentMachineSetup/#reference_material_3","text":"DISM - Deployment Image Servicing and Management DISM /online /get-features /format:table DISM /online /get-featureinfo /featurename:[feature name] DISM /online /disable-feature /featurename:[feature name] DISM /online /enable-feature /featurename:[feature name]","title":"Reference Material"},{"location":"technology/DevelopmentMachineSetup/#9_-_install_certificates","text":"Run Import-Certificate -FilePath \"C:\\Dev\\SSL\\MyLocalCertificateAuthority.crt\" -CertStoreLocation Cert:\\LocalMachine\\Root\\ Run $mypwd = ConvertTo-SecureString \"P@ssW0rD!\" -AsPlainText -Force Run Import-PfxCertificate -FilePath \"C:\\Dev\\SSL\\mydomain.com.pfx\" -CertStoreLocation Cert:\\LocalMachine\\My\\ -Password $mypwd.Password Optional $mypwd = Get-Credential -UserName 'Enter password below' -Message 'Enter password below'","title":"9 - Install Certificates"},{"location":"technology/DevelopmentMachineSetup/#10_-_install_vscode_extensions","text":"code --install-extension amazonwebservices.aws-toolkit-vscode code --install-extension angular.ng-template code --install-extension johnpapa.angular-essentials code --install-extension johnpapa.angular2 code --install-extension kendoui.kendotemplatewizard code --install-extension dbaeumer.vscode-eslint code --install-extension ms-vscode.vscode-typescript-next code --install-extension ms-vscode.powershell code --install-extension ms-dotnettools.csharp code --install-extension ms-azuretools.vscode-docker code --install-extension ms-kubernetes-tools.vscode-kubernetes-tools code --install-extension ms-vsliveshare.vsliveshare code --install-extension esbenp.prettier-vscode code --install-extension ms-edgedevtools.vscode-edge-devtools code --install-extension GitHub.codespaces code --install-extension GitHub.remotehub code --install-extension GitHub.vscode-codeql code --install-extension GitHub.classroom code --install-extension Atlassian.atlascode code --install-extension ms-playwright.playwright code --install-extension vsblox.blox code --install-extension bierner.markdown-mermaid code --install-extension pflannery.vscode-versionlens code --install-extension wix.vscode-import-cost code --install-extension eamodio.gitlens code --install-extension pranaygp.vscode-css-peek code --install-extension usernamehw.errorlens code --install-extension ms-azuretools.vscode-tye code --install-extension SonarSource.sonarlint-vscode code --install-extension quicktype.quicktype code --install-extension ms-dotnettools.dotnet-interactive-vscode","title":"10 - Install VSCode Extensions"},{"location":"technology/DevelopmentMachineSetup/#10_-_install_visual_studio_2022_extensions","text":"#Credits: https://gist.github.com/ScottHutchinson/b22339c3d3688da5c9b477281e258400 #$PackageName = \"AmazonWebServices.AWSToolkitforVisualStudio2022\" #$PackageName = \"GitHub.copilotvs\" #$PackageName = \"SteveCadwallader.CodeMaid\" #$PackageName = \"SteveCadwallader.CodeMaidVS2022\" #$PackageName = \"ironcev.sharpen\" #$PackageName = \"SonarSource.SonarLintforVisualStudio2022\" #$PackageName = \"DevExpress.CodeRushforVS2022\" $PackageName = \"MLNET.notebook\" $ErrorActionPreference = \"Stop\" $baseProtocol = \"https:\" $baseHostName = \"marketplace.visualstudio.com\" $Uri = \" $( $baseProtocol ) // $( $baseHostName ) /items?itemName= $( $PackageName ) \" $VsixLocation = \" $( $env:Temp ) \\ $( [guid] :: NewGuid ()) .vsix\" $VSInstallDir = \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\resources\\app\\ServiceHub\\Services\\Microsoft.VisualStudio.Setup.Service\" if ( -Not $VSInstallDir ) { Write-Error \"Visual Studio InstallDir registry key missing\" Exit 1 } Write-Host \"Grabbing VSIX extension at $( $Uri ) \" $HTML = Invoke-WebRequest -Uri $Uri -UseBasicParsing -SessionVariable session Write-Host \"Attempting to download $( $PackageName ) ...\" $anchor = $HTML . Links | Where-Object { $_ . class -eq 'install-button-container' } | Select-Object -ExpandProperty href if ( -Not $anchor ) { Write-Error \"Could not find download anchor tag on the Visual Studio Extensions page\" Exit 1 } Write-Host \"Anchor is $( $anchor ) \" $href = \" $( $baseProtocol ) // $( $baseHostName )$( $anchor ) \" Write-Host \"Href is $( $href ) \" Invoke-WebRequest $href -OutFile $VsixLocation -WebSession $session if ( -Not ( Test-Path $VsixLocation )) { Write-Error \"Downloaded VSIX file could not be located\" Exit 1 } Write-Host \"VSInstallDir is $( $VSInstallDir ) \" Write-Host \"VsixLocation is $( $VsixLocation ) \" Write-Host \"Installing $( $PackageName ) ...\" Start-Process -Filepath \" $( $VSInstallDir ) \\VSIXInstaller\" -ArgumentList \"/q /a $( $VsixLocation ) \" -Wait Write-Host \"Cleanup...\" rm $VsixLocation Write-Host \"Installation of $( $PackageName ) complete!\"","title":"10 - Install Visual Studio 2022 Extensions"},{"location":"technology/DevelopmentMachineSetup/#create_iis_websites","text":"Powershell 7+ is required Run Install-Module -Name IISAdministration -Scope AllUsers -AllowClobber Run New-IISSite -Name 'website_name' -PhysicalPath 'C:\\Inetpub\\wwwroot' -BindingInformation \"*:443:hostname1.com\" -Protocol https -SslFlag \"Sni\" -CertificateThumbPrint \"[Insert Thumbprint]\" -CertStoreLocation \"Cert:\\LocalMachine\\My\" -Force Run New-IISSiteBinding -Name \"website_name\" -BindingInformation \"*:443:hostname2.com\" -Protocol https -SslFlag \"Sni\" -CertificateThumbPrint \"[Insert Thumbprint]\" -CertStoreLocation \"Cert:\\LocalMachine\\My\" -Force","title":"Create IIS Websites"},{"location":"technology/DevelopmentMachineSetup/#change_host_file","text":"$HostFile = 'C:\\Windows\\System32\\drivers\\etc\\hosts' # Create a backup copy of the Hosts file $dateFormat = ( Get-Date ). ToString ( 'dd-MM-yyyy hh-mm-ss' ) $FileCopy = $HostFile + '.' + $dateFormat + '.copy' Copy-Item $HostFile -Destination $FileCopy $Bindings = Get-IISSiteBinding \"websitename.com\" # Get the contents of the Hosts file $File = Get-Content $HostFile # write the Entries to hosts file, if it doesn't exist. foreach ( $Binding in $Bindings ) { $HostFileEntry = $Binding . bindingInformation $HostFileEntry = $HostFileEntry -replace \"\\*:443:\" , \"\" Write-Host \"Checking existing HOST file entries for $HostFileEntry...\" #Set a Flag $EntryExists = $false if ( $File -contains \"127.0.0.1 `t $HostFileEntry\" ) { Write-Host \"Host File Entry for $HostFileEntry already exists.\" $EntryExists = $true } #Add Entry to Host File if (! $EntryExists ) { Write-host \"Adding Host File Entry for $HostFileEntry\" Add-content -path $HostFile -value \"127.0.0.1 `t $HostFileEntry\" } }","title":"Change host file"},{"location":"technology/DevelopmentMachineSetup/#configure_ipport_mapping","text":"","title":"Configure IP/Port Mapping"},{"location":"technology/DevelopmentMachineSetup/#overview","text":"","title":"Overview"},{"location":"technology/DevelopmentMachineSetup/#actions","text":"Started my server on localhost:8081 Added my \"local DNS\" in the hosts file as a new line (127.65.43.21 example.app). Any free address in the network 127.0.0.0/8 (127.x.x.x) can be used. You can check with netstat -a -n -p TCP | grep \"LISTENING\" Added the following network configuration with netsh interface portproxy add v4tov4 listenport=80 listenaddress=127.65.43.21 connectport=8081 connectaddress=127.0.0.1 I can now access the server at http://example.app","title":"Actions"},{"location":"technology/DevelopmentMachineSetup/#notes","text":"These commands/file modifications need to be executed with Admin rights netsh portproxy needs ipv6 libraries even only to use v4tov4, typically they will also be included by default, otherwise install them using the following command: netsh interface ipv6 install You can see the entry you have added with the command: netsh interface portproxy show v4tov4 You can remove the entry with the following command: netsh interface portproxy delete v4tov4 listenport=80 listenaddress=127.65.43.21 Links to Resources: Using Netsh Netsh commands for Interface IP Netsh commands for Interface Portproxy Windows Port Forwarding Example","title":"Notes"},{"location":"technology/DevelopmentMachineSetup/#browsers","text":"winget install -e --id Microsoft.Edge.Dev winget install -e --id BraveSoftware.BraveBrowser winget install -e --id Microsoft.Edge winget install -e --id Google.Chrome.Dev winget install -e --id Mozilla.Firefox.DeveloperEdition winget install -e --id Opera.Opera","title":"Browsers"},{"location":"technology/DevelopmentMachineSetup/#dev_tools","text":"winget install -e --id Postman.Postman winget install -e --id Docker.DockerDesktop winget install -e --id Datalust.Seq winget install -e --id Microsoft.DeploymentToolkit winget install -e --id Microsoft.webpicmd winget install -e --id qishibo.AnotherRedisDesktopManager winget install -e --id Microsoft.PowerShell winget install -e --id Microsoft.PowerShell.Preview winget install -e --id Microsoft.PowerAutomateDesktop winget install -e --id Gauge.Gauge","title":"Dev Tools"},{"location":"technology/DevelopmentMachineSetup/#command_prompt_setup","text":"Run winget install JanDeDobbeleer.OhMyPosh -s winget Run Install-Module PSReadLine -AllowPrerelease -Force Run notepad $PROFILE and add these lines oh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH\\jandedobbeleer.omp.json\" | Invoke-Expression Import-Module PSReadLine Set-PSReadLineOption -PredictionSource History Set-PSReadLineOption -PredictionViewStyle ListView Set-PSReadLineOption -EditMode Windows Restart command prompt window","title":"Command Prompt Setup"},{"location":"technology/DevelopmentMachineSetup/#references","text":"Adding Predictive IntelliSense to my Windows Terminal PowerShell Prompt with PSReadline - Scott Hanselman's Blog Set up a custom prompt for PowerShell or WSL with Oh My Posh","title":"References"},{"location":"technology/DevelopmentMachineSetup/#development_utilities","text":"dotnet tool install -g Microsoft.Tye --version \"0.11.0-alpha.22111.1\" winget install -e --id ScooterSoftware.BeyondCompare4 winget install -e --id LINQPad.LINQPad.7 winget install -e --id Microsoft.XMLNotepad winget install -e --id Notepad++.Notepad++ winget install -e --id WinMerge.WinMerge winget install -e --name Sysinternals winget install -e --id Microsoft.WindowsTerminal winget install -e --id Telerik.Fiddler.Everywhere winget install -e --id WiresharkFoundation.Wireshark winget install -e --id=Amazon.NoSQLWorkbench winget install DevToys","title":"Development Utilities"},{"location":"technology/DevelopmentMachineSetup/#misc","text":"winget install \"Files App\" winget install -e --id 7zip.7zip winget install -e --id Microsoft.PowerToys winget install -e --id VideoLAN.VLC winget install -e --id ShareX.ShareX winget install -e --id Grammarly.ForOffice winget install -e --id Grammarly.ForWindows winget install -e --id OBSProject.OBSStudio winget install -e --id JGraph.Draw winget install -e --id GIMP.GIMP","title":"Misc"},{"location":"technology/DevelopmentMachineSetup/#aws","text":"winget install -e --id Amazon.AWSCLI winget install -e --id Amazon.SAM-CLI","title":"AWS"},{"location":"technology/DevelopmentMachineSetup/#azure","text":"winget install -e --id Microsoft.AzureCLI","title":"Azure"},{"location":"technology/DevelopmentMachineSetup/#others","text":"Custom Prompt Setup","title":"Others"},{"location":"technology/Docker/","text":"Build and Run container # Navigate to the folder where the Dockerfile is stored Run docker build -t angular-container:1.0 . Search ImageID by running docker images Run docker run -p 80:80 469b3a773ed7 Dockerfile example # FROM node:lts as node RUN npm install -g @angular/cli WORKDIR /usr/src/app COPY src/TeamHub.UI/ ./my-app/ WORKDIR /usr/src/app/my-app RUN npm install RUN npm run build FROM nginx:alpine COPY --from=node /usr/src/app/my-app/dist/team-hub.ui /usr/share/nginx/html Images # https://hub.docker.com/_/microsoft-windows-nanoserver https://hub.docker.com/_/nginx https://hub.docker.com/_/microsoft-mssql-server https://hub.docker.com/_/redis Useful Commands # Display containers' resource usage statistics docker stats --all --no-stream Stop running containers docker kill $(docker ps -q) Remove all containers docker rm $(docker ps -a -q) Remove all images docker rmi $(docker images -q)","title":"Build and Run container"},{"location":"technology/Docker/#build_and_run_container","text":"Navigate to the folder where the Dockerfile is stored Run docker build -t angular-container:1.0 . Search ImageID by running docker images Run docker run -p 80:80 469b3a773ed7","title":"Build and Run container"},{"location":"technology/Docker/#dockerfile_example","text":"FROM node:lts as node RUN npm install -g @angular/cli WORKDIR /usr/src/app COPY src/TeamHub.UI/ ./my-app/ WORKDIR /usr/src/app/my-app RUN npm install RUN npm run build FROM nginx:alpine COPY --from=node /usr/src/app/my-app/dist/team-hub.ui /usr/share/nginx/html","title":"Dockerfile example"},{"location":"technology/Docker/#images","text":"https://hub.docker.com/_/microsoft-windows-nanoserver https://hub.docker.com/_/nginx https://hub.docker.com/_/microsoft-mssql-server https://hub.docker.com/_/redis","title":"Images"},{"location":"technology/Docker/#useful_commands","text":"Display containers' resource usage statistics docker stats --all --no-stream Stop running containers docker kill $(docker ps -q) Remove all containers docker rm $(docker ps -a -q) Remove all images docker rmi $(docker images -q)","title":"Useful Commands"},{"location":"technology/EntityFramework/","text":"Entity Framework Core tools reference - .NET Core CLI Install/Update # Install EF command dotnet tool install -g dotnet-ef --version 3.0.0 Update EF command (if required) dotnet tool update -g dotnet-ef --version 6.0.3 Create/Update Model (Database First) # csproj file must reference Microsoft.EntityFrameworkCore.Design and Microsoft.EntityFrameworkCore.SqlServer nuget packages Navigate to the folder where you want to store the model Update EF Model Classes dotnet ef dbcontext scaffold \"Server=localhost;Database=DbName;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -o Database -f","title":"EntityFramework"},{"location":"technology/EntityFramework/#installupdate","text":"Install EF command dotnet tool install -g dotnet-ef --version 3.0.0 Update EF command (if required) dotnet tool update -g dotnet-ef --version 6.0.3","title":"Install/Update"},{"location":"technology/EntityFramework/#createupdate_model_database_first","text":"csproj file must reference Microsoft.EntityFrameworkCore.Design and Microsoft.EntityFrameworkCore.SqlServer nuget packages Navigate to the folder where you want to store the model Update EF Model Classes dotnet ef dbcontext scaffold \"Server=localhost;Database=DbName;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -o Database -f","title":"Create/Update Model (Database First)"},{"location":"technology/FeatureFlags/","text":"Objective # To implement a Feature Management solution that allows us to change application behaviour without changing code. AWS AppConfig # AWS AppConfig is a capability of AWS Systems Manager, to create, manage, and quickly deploy application configurations. A configuration is a collection of settings that influence the behavior of the application. The Amazon.Extensions.Configuration.SystemsManager simplifies using AWS AppConfig as a source for configuration information for .NET applications. Microsoft.FeatureManagement # Microsoft.FeatureManagement provides standardized APIs for enabling feature flags within applications. This library secures a consistent experience when developing applications that use patterns such as beta access, rollout, dark deployments, and more. Configuration Sample # \"FeatureFlags\" : { \"featureA\" : false , \"featureB\" : true , \"featureC\" : false , \"featureD\" : { \"EnabledFor\" : [ { \"Name\" : \"Microsoft.Targeting\" , \"Parameters\" : { \"Audience\" : { \"Users\" : [ \"{tenantId}:{userId}\" , \"{tenantId}:{userId2}\" ], \"Groups\" : [ { \"Name\" : \"{tenantId}\" , \"RolloutPercentage\" : 0 }, { \"Name\" : \"{tenantId2}\" , \"RolloutPercentage\" : 50 }, { \"Name\" : \"{tenantId3}\" , \"RolloutPercentage\" : 100 } ], \"DefaultRolloutPercentage\" : 0 } } } ] } }","title":"Objective"},{"location":"technology/FeatureFlags/#objective","text":"To implement a Feature Management solution that allows us to change application behaviour without changing code.","title":"Objective"},{"location":"technology/FeatureFlags/#aws_appconfig","text":"AWS AppConfig is a capability of AWS Systems Manager, to create, manage, and quickly deploy application configurations. A configuration is a collection of settings that influence the behavior of the application. The Amazon.Extensions.Configuration.SystemsManager simplifies using AWS AppConfig as a source for configuration information for .NET applications.","title":"AWS AppConfig"},{"location":"technology/FeatureFlags/#microsoftfeaturemanagement","text":"Microsoft.FeatureManagement provides standardized APIs for enabling feature flags within applications. This library secures a consistent experience when developing applications that use patterns such as beta access, rollout, dark deployments, and more.","title":"Microsoft.FeatureManagement"},{"location":"technology/FeatureFlags/#configuration_sample","text":"\"FeatureFlags\" : { \"featureA\" : false , \"featureB\" : true , \"featureC\" : false , \"featureD\" : { \"EnabledFor\" : [ { \"Name\" : \"Microsoft.Targeting\" , \"Parameters\" : { \"Audience\" : { \"Users\" : [ \"{tenantId}:{userId}\" , \"{tenantId}:{userId2}\" ], \"Groups\" : [ { \"Name\" : \"{tenantId}\" , \"RolloutPercentage\" : 0 }, { \"Name\" : \"{tenantId2}\" , \"RolloutPercentage\" : 50 }, { \"Name\" : \"{tenantId3}\" , \"RolloutPercentage\" : 100 } ], \"DefaultRolloutPercentage\" : 0 } } } ] } }","title":"Configuration Sample"},{"location":"technology/Git/","text":"Reset author for ALL commits # git filter-branch -f --env-filter \"GIT_AUTHOR_NAME='Newname'; GIT_AUTHOR_EMAIL='new@email'; GIT_COMMITTER_NAME='Newname'; GIT_COMMITTER_EMAIL='new@email';\" HEAD git push --force --tags origin 'refs/heads/main' Read Git Configuration # git config --local -l git config --global -l Removing sensitive data from a repository # https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository https://rtyley.github.io/bfg-repo-cleaner/ Troubleshoot git issues # set GIT_TRACE=1 set GIT_CURL_VERBOSE=1 Fix .gitignore issues # Run git rm -r --cached . to unstage and remove the path to your files from the Git index. Execute git add . to re-add all your files back (only the correct files will be updated). Execute git commit -m \".gitignore is now working\" to commit all your files back into the Git index. Change last commit message # Run git commit --amend -m \"New and correct message\" Delete the most recent commit # without destroying the work you've done: git reset --soft HEAD~1 destroying the work you've done: git reset --hard HEAD~1","title":"Git"},{"location":"technology/Git/#reset_author_for_all_commits","text":"git filter-branch -f --env-filter \"GIT_AUTHOR_NAME='Newname'; GIT_AUTHOR_EMAIL='new@email'; GIT_COMMITTER_NAME='Newname'; GIT_COMMITTER_EMAIL='new@email';\" HEAD git push --force --tags origin 'refs/heads/main'","title":"Reset author for ALL commits"},{"location":"technology/Git/#read_git_configuration","text":"git config --local -l git config --global -l","title":"Read Git Configuration"},{"location":"technology/Git/#removing_sensitive_data_from_a_repository","text":"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository https://rtyley.github.io/bfg-repo-cleaner/","title":"Removing sensitive data from a repository"},{"location":"technology/Git/#troubleshoot_git_issues","text":"set GIT_TRACE=1 set GIT_CURL_VERBOSE=1","title":"Troubleshoot git issues"},{"location":"technology/Git/#fix_gitignore_issues","text":"Run git rm -r --cached . to unstage and remove the path to your files from the Git index. Execute git add . to re-add all your files back (only the correct files will be updated). Execute git commit -m \".gitignore is now working\" to commit all your files back into the Git index.","title":"Fix .gitignore issues"},{"location":"technology/Git/#change_last_commit_message","text":"Run git commit --amend -m \"New and correct message\"","title":"Change last commit message"},{"location":"technology/Git/#delete_the_most_recent_commit","text":"without destroying the work you've done: git reset --soft HEAD~1 destroying the work you've done: git reset --hard HEAD~1","title":"Delete the most recent commit"},{"location":"technology/IdentityServer/","text":"Examples IdentityServer Template IdentityServer Backend and Frontend's Configuration Reference Material https://docs.duendesoftware.com/identityserver/v6/quickstarts/ https://openid.net/connect/ https://jwt.io/ OAuth 2.0 and OpenID Connect (in plain English)","title":"IdentityServer"},{"location":"technology/MinimalAPI/","text":"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis https://docs.microsoft.com/en-us/aspnet/core/fundamentals/target-aspnetcore","title":"MinimalAPI"},{"location":"technology/NukeBuild/","text":"Installation # https://nuke.build/docs/getting-started/installation/ Run dotnet tool install Nuke.GlobalTool --global Run nuke :setup Documentation Cli-tools Support See Example Run dotnet run --plan from build folder to see Execution Plan Run dotnet run --Param1 \"value\" --Param2 \"value\" --Param3 \"value\" Notes: 1. Install nbgv .NET Core CLI tool 2. Add nuget.config file next to your sln file (requires VS restart) 3. Create build folder under your application and copy the files from PipelineTemplate 4. Update Solution Name in the .nuke/parameters.json file 5. Create the version.json file under each component that must be versioned (required for GitVersioning to calculate the semantic version number) 6. Create deployment_list.json file (required for the pipeline to know which components should be packed for deployment) https://github.com/OctopusDeploy/OctoVersion","title":"Installation"},{"location":"technology/NukeBuild/#installation","text":"https://nuke.build/docs/getting-started/installation/ Run dotnet tool install Nuke.GlobalTool --global Run nuke :setup Documentation Cli-tools Support See Example Run dotnet run --plan from build folder to see Execution Plan Run dotnet run --Param1 \"value\" --Param2 \"value\" --Param3 \"value\" Notes: 1. Install nbgv .NET Core CLI tool 2. Add nuget.config file next to your sln file (requires VS restart) 3. Create build folder under your application and copy the files from PipelineTemplate 4. Update Solution Name in the .nuke/parameters.json file 5. Create the version.json file under each component that must be versioned (required for GitVersioning to calculate the semantic version number) 6. Create deployment_list.json file (required for the pipeline to know which components should be packed for deployment) https://github.com/OctopusDeploy/OctoVersion","title":"Installation"},{"location":"technology/Observability/","text":"Prerequisites # Perpetually free New Relic account , 100 GB/month of free data ingest, 1 free full access user, unlimited free basic users Reference Material # https://docs.dapr.io/operations/monitoring/tracing/supported-tracing-backends/newrelic/ https://hub.docker.com/r/newrelic/infrastructure/","title":"Prerequisites"},{"location":"technology/Observability/#prerequisites","text":"Perpetually free New Relic account , 100 GB/month of free data ingest, 1 free full access user, unlimited free basic users","title":"Prerequisites"},{"location":"technology/Observability/#reference_material","text":"https://docs.dapr.io/operations/monitoring/tracing/supported-tracing-backends/newrelic/ https://hub.docker.com/r/newrelic/infrastructure/","title":"Reference Material"},{"location":"technology/Performance/","text":"","title":"Performance"},{"location":"technology/Playwright/","text":"https://playwright.dev/dotnet/docs/intro#installation https://playwright.dev/dotnet/docs/codegen https://github.com/leandromonaco/Workbench/tree/main/AutomationTesting/PlaywrightDemo","title":"Playwright"},{"location":"technology/Redis/","text":"Docker # docker run -p 6379:6379 --name hf-redis -d redis Reference: https://hub.docker.com/_/redis Client # GUI # winget install -e --id ekvedaras.redis-gui Source: https://github.com/ekvedaras/redis-gui Console # npm install -g redis-cli rdcli -h your.redis.host -a yourredispassword -p 11111 Source: https://github.com/lujiajing1126/redis-cli","title":"Docker"},{"location":"technology/Redis/#docker","text":"docker run -p 6379:6379 --name hf-redis -d redis Reference: https://hub.docker.com/_/redis","title":"Docker"},{"location":"technology/Redis/#client","text":"","title":"Client"},{"location":"technology/Redis/#gui","text":"winget install -e --id ekvedaras.redis-gui Source: https://github.com/ekvedaras/redis-gui","title":"GUI"},{"location":"technology/Redis/#console","text":"npm install -g redis-cli rdcli -h your.redis.host -a yourredispassword -p 11111 Source: https://github.com/lujiajing1126/redis-cli","title":"Console"},{"location":"technology/SqlServer/","text":"EF vs. Stored Procedures # Entity Framework Vs Stored Procedures - Performance Measure Performance Considerations (Entity Framework) What are the pros and cons of using stored procedures vs C# code for DB work? SQL Performance # Performance Center for SQL Server Database Start and use the Database Engine Tuning Advisor Monitor performance by using the Query Store Use the Maintenance Plan Wizard Resources # Brent Ozar SQL Kit Troubleshooting # Error: 'Agent XPs' component is turned off as part of the security configuration for this server. A system administrator can enable the use of 'Agent XPs' by using sp_configure. For more information about enabling 'Agent XPs', see \"Surface Area Configuration\" in SQL Server Books Online. (Microsoft.SqlServer.Management.MaintenancePlanWizard) Solution: sp_configure 'show advanced options' , 1 ; GO RECONFIGURE ; GO sp_configure 'Agent XPs' , 1 ; GO RECONFIGURE GO Error: SQLServerAgent is not currently running so it cannot be notified of this action. (Microsoft SQL Server, Error: 22022) Solution: Open SQL Server Configuration Manager and enable SQL Server Agent Service","title":"SQL Server"},{"location":"technology/SqlServer/#ef_vs_stored_procedures","text":"Entity Framework Vs Stored Procedures - Performance Measure Performance Considerations (Entity Framework) What are the pros and cons of using stored procedures vs C# code for DB work?","title":"EF vs. Stored Procedures"},{"location":"technology/SqlServer/#sql_performance","text":"Performance Center for SQL Server Database Start and use the Database Engine Tuning Advisor Monitor performance by using the Query Store Use the Maintenance Plan Wizard","title":"SQL Performance"},{"location":"technology/SqlServer/#resources","text":"Brent Ozar SQL Kit","title":"Resources"},{"location":"technology/SqlServer/#troubleshooting","text":"Error: 'Agent XPs' component is turned off as part of the security configuration for this server. A system administrator can enable the use of 'Agent XPs' by using sp_configure. For more information about enabling 'Agent XPs', see \"Surface Area Configuration\" in SQL Server Books Online. (Microsoft.SqlServer.Management.MaintenancePlanWizard) Solution: sp_configure 'show advanced options' , 1 ; GO RECONFIGURE ; GO sp_configure 'Agent XPs' , 1 ; GO RECONFIGURE GO Error: SQLServerAgent is not currently running so it cannot be notified of this action. (Microsoft SQL Server, Error: 22022) Solution: Open SQL Server Configuration Manager and enable SQL Server Agent Service","title":"Troubleshooting"},{"location":"technology/Troubleshooting/","text":"Third-Party Tools # Sysinternals SSL Server Test Google Toolbox Browserinfo is a browser based debugging tool to capture client side information. You can look for obvious information that might impact users experience on the Internet. Useragent is a tool that analyzes user agent string. Screen Recorder Quick Assist Problem Step Recorder Encode/Decode provides you encoding and decoding functions that are helpful for debugging web-related problems. Chrome Connectivity Diagnostics Measure app performance in Visual Studio My Tools # DependencyTester Network Capture","title":"Third-Party Tools"},{"location":"technology/Troubleshooting/#third-party_tools","text":"Sysinternals SSL Server Test Google Toolbox Browserinfo is a browser based debugging tool to capture client side information. You can look for obvious information that might impact users experience on the Internet. Useragent is a tool that analyzes user agent string. Screen Recorder Quick Assist Problem Step Recorder Encode/Decode provides you encoding and decoding functions that are helpful for debugging web-related problems. Chrome Connectivity Diagnostics Measure app performance in Visual Studio","title":"Third-Party Tools"},{"location":"technology/Troubleshooting/#my_tools","text":"DependencyTester Network Capture","title":"My Tools"},{"location":"technology/Tye/","text":"Reference Material # Documentation Schema Getting Started Recipes Samples Tye Command Installation # dotnet tool uninstall -g Microsoft.Tye dotnet tool install -g Microsoft.Tye --version \"0.11.0-alpha.22111.1\" tye --version Create tye.yaml # Go to the solution folder Run tye init to generate tye.yaml Run tye run --port 10000 --dashboard (where the tye.yaml file is located) - Add --watch to watch file changes in all projects. - Add --debug * to debug (and attach the debugger to the application process) tye.yaml Example # # tye application configuration file # read all about it at https://github.com/dotnet/tye # # when you've given us a try, we'd love to know what you think: # https://aka.ms/AA7q20u # extensions : - name : seq logPath : ./.logs name : servicetemplate #registry: exampleuser (required for Kubernetes) #namespace: examplenamespace network : tye-network ingress : - name : Ingress bindings : - port : 51000 protocol : https ip : '127.0.0.1' rules : - host : notifications.domain.com service : servicename-api services : - name : servicename-api project : ServiceName.API/ServiceName.API.csproj bindings : - port : 51001 protocol : https #replicas: 2 - name : SqlServer image : mcr.microsoft.com/mssql/server:2019-latest bindings : - connectionString : Data Source=host.docker.internal,1433;Initial Catalog=ServiceDB;Persist Security Info=True;User ID=sa;Password=${env:SA_PASSWORD} port : 1433 env : - name : SA_PASSWORD value : M3rz0ug4!!!! - name : ACCEPT_EULA value : \"Y\" - name : Redis image : redis bindings : - port : 6379 connectionString : \"${host}:${port}\" #args: \"redis-cli -h redis MONITOR\" # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html (Docker Tab) # https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/DynamoDBLocal.UsageNotes.html # aws --endpoint-url=http://localhost:8000 dynamodb list-tables # aws --endpoint-url=http://localhost:8000 dynamodb create-table --table-name ServiceName_Setting --attribute-definitions AttributeName=TenantId,AttributeType=S --key-schema AttributeName=TenantId,KeyType=HASH --billing-mode PAY_PER_REQUEST # -inMemory and -dbPath cannot be set at the same time # Local DynamoDB has serious performance issues when not using -inMemory parameter - name : DynamoDB image : \"amazon/dynamodb-local:latest\" args : -jar DynamoDBLocal.jar -inMemory -sharedDb #args: -jar DynamoDBLocal.jar -sharedDb -dbPath /mnt/c/Temp/DynamoDB #volumes: # - source: \"./\" # target: \"/mnt/c/Temp/DynamoDB\" bindings : - port : 8000 env : - name : AWS_ACCESS_KEY_ID value : test - name : AWS_SECRET_ACCESS_KEY value : test - name : REGION value : ap-southeast-2 #aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 create-key --key-spec RSA_4096 --key-usage ENCRYPT_DECRYPT #aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 list-keys - name : KMS image : nsmithuk/local-kms volumes : - source : \"./\" target : \"/mnt/c/Temp/Kms\" bindings : - port : 52002 - name : LocalStack image : \"localstack/localstack:latest\" bindings : - port : 4566 env : - name : DEBUG value : \"1\" - name : SERVICES value : \"logs\" - name : Zipkin image : \"openzipkin/zipkin\" bindings : - port : 9411 protocol : http Troubleshooting # An attempt was made to access a socket in a way forbidden by its access permissions # Run net stop hns and net start hns Could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network # Stop running containers docker kill $(docker ps -q) Remove all containers docker rm $(docker ps -a -q) Remove unused networks docker network prune","title":"Tye"},{"location":"technology/Tye/#reference_material","text":"Documentation Schema Getting Started Recipes Samples Tye Command","title":"Reference Material"},{"location":"technology/Tye/#installation","text":"dotnet tool uninstall -g Microsoft.Tye dotnet tool install -g Microsoft.Tye --version \"0.11.0-alpha.22111.1\" tye --version","title":"Installation"},{"location":"technology/Tye/#create_tyeyaml","text":"Go to the solution folder Run tye init to generate tye.yaml Run tye run --port 10000 --dashboard (where the tye.yaml file is located) - Add --watch to watch file changes in all projects. - Add --debug * to debug (and attach the debugger to the application process)","title":"Create tye.yaml"},{"location":"technology/Tye/#tyeyaml_example","text":"# tye application configuration file # read all about it at https://github.com/dotnet/tye # # when you've given us a try, we'd love to know what you think: # https://aka.ms/AA7q20u # extensions : - name : seq logPath : ./.logs name : servicetemplate #registry: exampleuser (required for Kubernetes) #namespace: examplenamespace network : tye-network ingress : - name : Ingress bindings : - port : 51000 protocol : https ip : '127.0.0.1' rules : - host : notifications.domain.com service : servicename-api services : - name : servicename-api project : ServiceName.API/ServiceName.API.csproj bindings : - port : 51001 protocol : https #replicas: 2 - name : SqlServer image : mcr.microsoft.com/mssql/server:2019-latest bindings : - connectionString : Data Source=host.docker.internal,1433;Initial Catalog=ServiceDB;Persist Security Info=True;User ID=sa;Password=${env:SA_PASSWORD} port : 1433 env : - name : SA_PASSWORD value : M3rz0ug4!!!! - name : ACCEPT_EULA value : \"Y\" - name : Redis image : redis bindings : - port : 6379 connectionString : \"${host}:${port}\" #args: \"redis-cli -h redis MONITOR\" # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html (Docker Tab) # https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/DynamoDBLocal.UsageNotes.html # aws --endpoint-url=http://localhost:8000 dynamodb list-tables # aws --endpoint-url=http://localhost:8000 dynamodb create-table --table-name ServiceName_Setting --attribute-definitions AttributeName=TenantId,AttributeType=S --key-schema AttributeName=TenantId,KeyType=HASH --billing-mode PAY_PER_REQUEST # -inMemory and -dbPath cannot be set at the same time # Local DynamoDB has serious performance issues when not using -inMemory parameter - name : DynamoDB image : \"amazon/dynamodb-local:latest\" args : -jar DynamoDBLocal.jar -inMemory -sharedDb #args: -jar DynamoDBLocal.jar -sharedDb -dbPath /mnt/c/Temp/DynamoDB #volumes: # - source: \"./\" # target: \"/mnt/c/Temp/DynamoDB\" bindings : - port : 8000 env : - name : AWS_ACCESS_KEY_ID value : test - name : AWS_SECRET_ACCESS_KEY value : test - name : REGION value : ap-southeast-2 #aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 create-key --key-spec RSA_4096 --key-usage ENCRYPT_DECRYPT #aws --endpoint-url=http://localhost:52002 kms --region ap-southeast-2 list-keys - name : KMS image : nsmithuk/local-kms volumes : - source : \"./\" target : \"/mnt/c/Temp/Kms\" bindings : - port : 52002 - name : LocalStack image : \"localstack/localstack:latest\" bindings : - port : 4566 env : - name : DEBUG value : \"1\" - name : SERVICES value : \"logs\" - name : Zipkin image : \"openzipkin/zipkin\" bindings : - port : 9411 protocol : http","title":"tye.yaml Example"},{"location":"technology/Tye/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"technology/Tye/#an_attempt_was_made_to_access_a_socket_in_a_way_forbidden_by_its_access_permissions","text":"Run net stop hns and net start hns","title":"An attempt was made to access a socket in a way forbidden by its access permissions"},{"location":"technology/Tye/#could_not_find_an_available_non-overlapping_ipv4_address_pool_among_the_defaults_to_assign_to_the_network","text":"Stop running containers docker kill $(docker ps -q) Remove all containers docker rm $(docker ps -a -q) Remove unused networks docker network prune","title":"Could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network"},{"location":"technology/WSL/","text":"WSL # Docker Desktop for Windows provides a development environment for building, shipping, and running dockerized apps. By enabling the WSL 2 based engine, you can run both Linux and Windows containers in Docker Desktop on the same machine. Configure WSL2 # Run wsl --shutdown Run notepad \"$env:USERPROFILE/.wslconfig\" [wsl2] memory=5GB processors=1 See all configuration options on https://docs.microsoft.com/en-us/windows/wsl/wsl-config#wsl-2-settings","title":"WSL"},{"location":"technology/WSL/#wsl","text":"Docker Desktop for Windows provides a development environment for building, shipping, and running dockerized apps. By enabling the WSL 2 based engine, you can run both Linux and Windows containers in Docker Desktop on the same machine.","title":"WSL"},{"location":"technology/WSL/#configure_wsl2","text":"Run wsl --shutdown Run notepad \"$env:USERPROFILE/.wslconfig\" [wsl2] memory=5GB processors=1 See all configuration options on https://docs.microsoft.com/en-us/windows/wsl/wsl-config#wsl-2-settings","title":"Configure WSL2"}]}